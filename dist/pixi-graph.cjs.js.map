{"version":3,"file":"pixi-graph.cjs.js","sources":["../src/utils/text.ts","../src/utils/style.ts","../src/texture-cache.ts","../src/utils/color.ts","../src/renderers/node.ts","../src/renderers/node-label.ts","../src/node.ts","../src/utils/bezier.ts","../src/renderers/edge.ts","../src/renderers/edge-label.ts","../src/edge.ts","../src/graph.ts"],"sourcesContent":["import { Text } from '@pixi/text';\nimport { BitmapText } from '@pixi/text-bitmap';\n\nconst WHITE = 0xffffff;\n\nexport enum TextType {\n  TEXT = 'TEXT',\n  BITMAP_TEXT = 'BITMAP_TEXT',\n  // TODO: SDF_TEXT\n  // see https://github.com/PixelsCommander/pixi-sdf-text/issues/12\n}\n\n// TODO: use TextStyle from @pixi/text directly?\nexport interface TextStyle {\n  fontFamily: string;\n  fontSize: number;\n}\n\n// for antialias: BITMAP_TEXT is much better than TEXT\nexport function textToPixi(type: TextType, content: string, style: TextStyle) {\n  let text;\n  if (type === TextType.TEXT) {\n    // TODO: convert to bitmap font with BitmapFont.from?\n    text = new Text(content, {\n      fontFamily: style.fontFamily,\n      fontSize: style.fontSize,\n      fill: WHITE,\n    });\n  } else if (type === TextType.BITMAP_TEXT) {\n    text = new BitmapText(content, {\n      fontName: style.fontFamily,\n      fontSize: style.fontSize,\n    });\n  } else {\n    throw new Error('Invalid state');\n  }\n  text.roundPixels = true;\n  return text;\n}\n","import deepmerge from 'deepmerge';\nimport { BaseNodeAttributes, BaseEdgeAttributes } from '../attributes';\nimport { TextType } from './text';\n\nexport interface GraphStyle {\n  node: {\n    size: number;\n    color: string;\n    border: {\n      width: number;\n      color: string;\n    };\n    icon: {\n      url?: string;\n      width?: number;\n      height?: number;\n    };\n    label: {\n      content: string;\n      type: TextType;\n      fontFamily: string;\n      fontSize: number;\n      color: string;\n      padding: number;\n    };\n  };\n  edge: {\n    width: number;\n    color: string;\n    label: {\n      content: string;\n      type: TextType;\n      fontFamily: string;\n      fontSize: number;\n      color: string;\n      padding: number;\n    };\n  };\n}\n\nexport type NodeStyle = GraphStyle['node'];\nexport type EdgeStyle = GraphStyle['edge'];\n\nexport type StyleDefinition<Style, Attributes> =\n  | ((attributes: Attributes) => Style)\n  | { [Key in keyof Style]?: StyleDefinition<Style[Key], Attributes> }\n  | Style;\n\nexport type NodeStyleDefinition<NodeAttributes extends BaseNodeAttributes = BaseNodeAttributes> = StyleDefinition<\n  NodeStyle,\n  NodeAttributes\n>;\nexport type EdgeStyleDefinition<EdgeAttributes extends BaseEdgeAttributes = BaseEdgeAttributes> = StyleDefinition<\n  EdgeStyle,\n  EdgeAttributes\n>;\n\nexport interface GraphStyleDefinition<\n  NodeAttributes extends BaseNodeAttributes = BaseNodeAttributes,\n  EdgeAttributes extends BaseEdgeAttributes = BaseEdgeAttributes\n> {\n  node?: NodeStyleDefinition<NodeAttributes>;\n  edge?: EdgeStyleDefinition<EdgeAttributes>;\n}\n\nexport function resolveStyleDefinition<Style, Attributes>(\n  styleDefinition: StyleDefinition<Style, Attributes>,\n  attributes: Attributes\n): Style {\n  let style: Style;\n  if (styleDefinition instanceof Function) {\n    style = styleDefinition(attributes);\n  } else if (typeof styleDefinition === 'object' && styleDefinition !== null) {\n    style = Object.fromEntries(\n      Object.entries(styleDefinition).map(([key, styleDefinition]) => {\n        return [key, resolveStyleDefinition(styleDefinition, attributes)];\n      })\n    ) as Style;\n  } else {\n    style = styleDefinition;\n  }\n  return style;\n}\n\nexport function resolveStyleDefinitions<Style, Attributes>(\n  styleDefinitions: (StyleDefinition<Style, Attributes> | undefined)[],\n  attributes: Attributes\n): Style {\n  const styles = styleDefinitions\n    .filter((x) => !!x)\n    .map((styleDefinition) => resolveStyleDefinition(styleDefinition!, attributes));\n  const style = deepmerge.all<Style>(styles);\n  return style;\n}\n","import { AbstractRenderer } from '@pixi/core';\nimport { Container } from '@pixi/display';\nimport { Texture } from '@pixi/core';\nimport { Rectangle } from '@pixi/math';\nimport { SCALE_MODES } from '@pixi/constants';\n\nexport class TextureCache {\n  renderer: AbstractRenderer;\n\n  private textures = new Map<string, Texture>();\n\n  constructor(renderer: AbstractRenderer) {\n    this.renderer = renderer;\n  }\n\n  get(key: string, defaultCallback: () => Container): Texture {\n    let texture = this.textures.get(key);\n    if (!texture) {\n      const container = defaultCallback();\n      const region = container.getLocalBounds(undefined, true);\n      const roundedRegion = new Rectangle(\n        Math.floor(region.x),\n        Math.floor(region.y),\n        Math.ceil(region.width),\n        Math.ceil(region.height)\n      );\n      texture = this.renderer.generateTexture(\n        container,\n        SCALE_MODES.LINEAR,\n        // we want to support better texture antialias\n        // so we generate high resolution texture here\n        this.renderer.resolution * 4,\n        roundedRegion\n      );\n      this.textures.set(key, texture);\n    }\n    return texture;\n  }\n\n  delete(key: string) {\n    const texture = this.textures.get(key);\n    if (!texture) {\n      return;\n    }\n\n    texture.destroy();\n    this.textures.delete(key);\n  }\n\n  clear() {\n    Array.from(this.textures.keys()).forEach((key) => {\n      this.delete(key);\n    });\n  }\n\n  destroy() {\n    this.clear();\n  }\n}\n","import { rgb2hex } from '@pixi/utils';\nimport rgba from 'color-rgba';\n\nexport function colorToPixi(color: string) {\n  const rgbaColor = rgba(color);\n  if (!rgbaColor) {\n    throw new Error(`Invalid color ${color}`);\n  }\n  const pixiColor = rgb2hex([rgbaColor[0] / 255, rgbaColor[1] / 255, rgbaColor[2] / 255]);\n  const alpha = rgbaColor[3];\n  return [pixiColor, alpha] as [number, number];\n}\n","import { Texture } from '@pixi/core';\nimport { Container } from '@pixi/display';\nimport { Circle } from '@pixi/math';\nimport { Sprite } from '@pixi/sprite';\nimport { SmoothGraphics as Graphics } from '@pixi/graphics-smooth';\nimport '@pixi/mixin-get-child-by-name';\nimport { colorToPixi } from '../utils/color';\nimport { NodeStyle } from '../utils/style';\nimport { TextureCache } from '../texture-cache';\n\nconst DELIMETER = '::';\nconst WHITE = 0xffffff;\n\nconst NODE_CIRCLE = 'NODE_CIRCLE';\nconst NODE_CIRCLE_BORDER = 'NODE_CIRCLE_BORDER';\nconst NODE_ICON = 'NODE_ICON';\n\nexport function createNode(nodeGfx: Container) {\n  // nodeGfx\n  nodeGfx.hitArea = new Circle(0, 0);\n\n  // nodeGfx -> nodeCircle\n  const nodeCircle = new Sprite();\n  nodeCircle.name = NODE_CIRCLE;\n  nodeCircle.anchor.set(0.5);\n  nodeGfx.addChild(nodeCircle);\n\n  // nodeGfx -> nodeCircleBorder\n  const nodeCircleBorder = new Sprite();\n  nodeCircleBorder.name = NODE_CIRCLE_BORDER;\n  nodeCircleBorder.anchor.set(0.5);\n  nodeGfx.addChild(nodeCircleBorder);\n\n  // nodeGfx -> nodeIcon\n  const nodeIcon = new Sprite();\n  nodeIcon.name = NODE_ICON;\n  nodeIcon.anchor.set(0.5);\n  nodeGfx.addChild(nodeIcon);\n}\n\nexport function updateNodeStyle(nodeGfx: Container, nodeStyle: NodeStyle, textureCache: TextureCache) {\n  const nodeOuterSize = nodeStyle.size + nodeStyle.border.width;\n\n  const nodeCircleTextureKey = [NODE_CIRCLE, nodeStyle.size].join(DELIMETER);\n  const nodeCircleTexture = textureCache.get(nodeCircleTextureKey, () => {\n    const graphics = new Graphics();\n    graphics.beginFill(WHITE, 1.0, true);\n    graphics.drawCircle(nodeStyle.size, nodeStyle.size, nodeStyle.size);\n    return graphics;\n  });\n\n  const nodeCircleBorderTextureKey = [NODE_CIRCLE_BORDER, nodeStyle.size, nodeStyle.border.width].join(DELIMETER);\n  const nodeCircleBorderTexture = textureCache.get(nodeCircleBorderTextureKey, () => {\n    const graphics = new Graphics();\n    graphics.lineStyle(nodeStyle.border.width, WHITE);\n    graphics.drawCircle(nodeOuterSize, nodeOuterSize, nodeStyle.size);\n    return graphics;\n  });\n\n  // nodeGfx\n  (nodeGfx.hitArea as Circle).radius = nodeOuterSize;\n\n  // nodeGfx -> nodeCircle\n  const nodeCircle = nodeGfx.getChildByName!(NODE_CIRCLE) as Sprite;\n  nodeCircle.texture = nodeCircleTexture;\n  [nodeCircle.tint, nodeCircle.alpha] = colorToPixi(nodeStyle.color);\n\n  // nodeGfx -> nodeCircleBorder\n  const nodeCircleBorder = nodeGfx.getChildByName!(NODE_CIRCLE_BORDER) as Sprite;\n  nodeCircleBorder.texture = nodeCircleBorderTexture;\n  [nodeCircleBorder.tint, nodeCircleBorder.alpha] = colorToPixi(nodeStyle.border.color);\n\n  // nodeGfx -> nodeIcon\n  if (nodeStyle.icon.url && nodeStyle.icon.width && nodeStyle.icon.height) {\n    const nodeIcon = nodeGfx.getChildByName!(NODE_ICON) as Sprite;\n    nodeIcon.texture = Texture.from(nodeStyle.icon.url);\n    nodeIcon.width = nodeStyle.icon.width;\n    nodeIcon.height = nodeStyle.icon.height;\n    nodeGfx.addChild(nodeIcon);\n  }\n}\n\nexport function updateNodeVisibility(nodeGfx: Container, zoomStep: number) {\n  // nodeGfx -> nodeCircleBorder\n  const nodeCircleBorder = nodeGfx.getChildByName!(NODE_CIRCLE_BORDER) as Sprite;\n  nodeCircleBorder.visible = zoomStep >= 1;\n\n  // nodeGfx -> nodeIcon\n  const nodeIcon = nodeGfx.getChildByName!(NODE_ICON) as Sprite;\n  if (nodeIcon) {\n    nodeIcon.visible = zoomStep >= 2;\n  }\n}\n","import { Container } from '@pixi/display';\nimport { Sprite } from '@pixi/sprite';\nimport { BitmapText } from '@pixi/text-bitmap';\nimport '@pixi/mixin-get-child-by-name';\nimport { colorToPixi } from '../utils/color';\nimport { NodeStyle } from '../utils/style';\nimport { textToPixi } from '../utils/text';\nimport { TextureCache } from '../texture-cache';\n\nconst DELIMETER = '::';\n\nconst NODE_LABEL_TEXT = 'NODE_LABEL_TEXT';\n\nexport function createNodeLabel(nodeLabelGfx: Container) {\n  // nodeLabelGfx -> nodeLabelText\n  const nodeLabelText = new Sprite();\n  nodeLabelText.name = NODE_LABEL_TEXT;\n  nodeLabelText.anchor.set(0.5);\n  nodeLabelGfx.addChild(nodeLabelText);\n}\n\nexport function updateNodeLabelStyle(nodeLabelGfx: Container, nodeStyle: NodeStyle, textureCache: TextureCache) {\n  const nodeLabelTextTextureKey = [\n    NODE_LABEL_TEXT,\n    nodeStyle.label.fontFamily,\n    nodeStyle.label.fontSize,\n    nodeStyle.label.content,\n  ].join(DELIMETER);\n  const nodeLabelTextTexture = textureCache.get(nodeLabelTextTextureKey, () => {\n    const text = textToPixi(nodeStyle.label.type, nodeStyle.label.content, {\n      fontFamily: nodeStyle.label.fontFamily,\n      fontSize: nodeStyle.label.fontSize,\n    });\n    return text;\n  });\n\n  // nodeLabelGfx -> nodeLabelText\n  const nodeLabelText = nodeLabelGfx.getChildByName!(NODE_LABEL_TEXT) as Sprite;\n  nodeLabelText.texture = nodeLabelTextTexture;\n  nodeLabelText.y = nodeStyle.size + (nodeLabelTextTexture.height + nodeStyle.label.padding * 2) / 2;\n  [nodeLabelText.tint, nodeLabelText.alpha] = colorToPixi(nodeStyle.label.color);\n}\n\nexport function updateNodeLabelVisibility(nodeLabelGfx: Container, zoomStep: number) {\n  // nodeLabelGfx -> nodeLabelText\n  const nodeLabelText = nodeLabelGfx.getChildByName!(NODE_LABEL_TEXT) as BitmapText;\n  nodeLabelText.visible = zoomStep >= 3;\n}\n","import { Container } from '@pixi/display';\nimport { InteractionEvent } from '@pixi/interaction';\nimport { IPointData } from '@pixi/math';\nimport { TypedEmitter } from 'tiny-typed-emitter';\nimport { createNode, updateNodeStyle, updateNodeVisibility } from './renderers/node';\nimport { createNodeLabel, updateNodeLabelStyle, updateNodeLabelVisibility } from './renderers/node-label';\nimport { NodeStyle } from './utils/style';\nimport { TextureCache } from './texture-cache';\n\ninterface PixiNodeEvents {\n  mousemove: (event: MouseEvent) => void;\n  mouseover: (event: MouseEvent) => void;\n  mouseout: (event: MouseEvent) => void;\n  mousedown: (event: MouseEvent) => void;\n  mouseup: (event: MouseEvent) => void;\n  rightdown: (event: MouseEvent) => void;\n  rightup: (event: MouseEvent) => void;\n}\n\nexport class PixiNode extends TypedEmitter<PixiNodeEvents> {\n  nodeGfx: Container;\n  nodeLabelGfx: Container;\n  nodePlaceholderGfx: Container;\n  nodeLabelPlaceholderGfx: Container;\n\n  hovered: boolean = false;\n  selected: boolean = false;\n\n  constructor() {\n    super();\n\n    this.nodeGfx = this.createNode();\n    this.nodeLabelGfx = this.createNodeLabel();\n    this.nodePlaceholderGfx = new Container();\n    this.nodeLabelPlaceholderGfx = new Container();\n  }\n\n  private createNode() {\n    const nodeGfx = new Container();\n    nodeGfx.interactive = true;\n    nodeGfx.buttonMode = true;\n    nodeGfx.on('mousemove', (event: InteractionEvent) =>\n      this.emit('mousemove', event.data.originalEvent as MouseEvent)\n    );\n    nodeGfx.on('mouseover', (event: InteractionEvent) =>\n      this.emit('mouseover', event.data.originalEvent as MouseEvent)\n    );\n    nodeGfx.on('mouseout', (event: InteractionEvent) => this.emit('mouseout', event.data.originalEvent as MouseEvent));\n    nodeGfx.on('mousedown', (event: InteractionEvent) =>\n      this.emit('mousedown', event.data.originalEvent as MouseEvent)\n    );\n    nodeGfx.on('mouseup', (event: InteractionEvent) => this.emit('mouseup', event.data.originalEvent as MouseEvent));\n    nodeGfx.on('rightdown', (event: InteractionEvent) =>\n      this.emit('rightdown', event.data.originalEvent as MouseEvent)\n    );\n    nodeGfx.on('rightup', (event: InteractionEvent) => this.emit('rightup', event.data.originalEvent as MouseEvent));\n    createNode(nodeGfx);\n    return nodeGfx;\n  }\n\n  private createNodeLabel() {\n    const nodeLabelGfx = new Container();\n    // disable event no nodeLabel\n    // nodeLabelGfx.interactive = false;\n    // nodeLabelGfx.buttonMode = false;\n    // nodeLabelGfx.on('mousemove', (event: InteractionEvent) =>\n    //   this.emit('mousemove', event.data.originalEvent as MouseEvent)\n    // );\n    // nodeLabelGfx.on('mouseover', (event: InteractionEvent) =>\n    //   this.emit('mouseover', event.data.originalEvent as MouseEvent)\n    // );\n    // nodeLabelGfx.on('mouseout', (event: InteractionEvent) =>\n    //   this.emit('mouseout', event.data.originalEvent as MouseEvent)\n    // );\n    // nodeLabelGfx.on('mousedown', (event: InteractionEvent) =>\n    //   this.emit('mousedown', event.data.originalEvent as MouseEvent)\n    // );\n    // nodeLabelGfx.on('mouseup', (event: InteractionEvent) =>\n    //   this.emit('mouseup', event.data.originalEvent as MouseEvent)\n    // );\n    createNodeLabel(nodeLabelGfx);\n    return nodeLabelGfx;\n  }\n\n  updatePosition(position: IPointData) {\n    this.nodeGfx.position.copyFrom(position);\n    this.nodeLabelGfx.position.copyFrom(position);\n  }\n\n  updateStyle(nodeStyle: NodeStyle, textureCache: TextureCache) {\n    updateNodeStyle(this.nodeGfx, nodeStyle, textureCache);\n    updateNodeLabelStyle(this.nodeLabelGfx, nodeStyle, textureCache);\n  }\n\n  updateVisibility(zoomStep: number) {\n    updateNodeVisibility(this.nodeGfx, zoomStep);\n    updateNodeLabelVisibility(this.nodeLabelGfx, zoomStep);\n  }\n}\n","/// refer:\n//  1: https://codepen.io/IndependentSw/pen/mLZzGj\n//  2: https://math.stackexchange.com/questions/885292/how-to-take-derivative-of-bezier-function\n\nexport function getCubicBezierXY(\n  t: number,\n  sx: number,\n  sy: number,\n  cp1x: number,\n  cp1y: number,\n  cp2x: number,\n  cp2y: number,\n  ex: number,\n  ey: number\n) {\n  return {\n    x: Math.pow(1 - t, 3) * sx + 3 * t * Math.pow(1 - t, 2) * cp1x + 3 * t * t * (1 - t) * cp2x + t * t * t * ex,\n    y: Math.pow(1 - t, 3) * sy + 3 * t * Math.pow(1 - t, 2) * cp1y + 3 * t * t * (1 - t) * cp2y + t * t * t * ey,\n  };\n}\n\nexport function getCubicBezierAngle(\n  t: number,\n  sx: number,\n  sy: number,\n  cp1x: number,\n  cp1y: number,\n  cp2x: number,\n  cp2y: number,\n  ex: number,\n  ey: number\n) {\n  const dx = Math.pow(1 - t, 2) * (cp1x - sx) + 2 * t * (1 - t) * (cp2x - cp1x) + t * t * (ex - cp2x);\n  const dy = Math.pow(1 - t, 2) * (cp1y - sy) + 2 * t * (1 - t) * (cp2y - cp1y) + t * t * (ey - cp2y);\n  return -Math.atan2(dx, dy) + 0.5 * Math.PI;\n}\n\nexport function getQuadraticBezierXY(\n  t: number,\n  sx: number,\n  sy: number,\n  cp1x: number,\n  cp1y: number,\n  ex: number,\n  ey: number\n) {\n  return {\n    x: Math.pow(1 - t, 2) * sx + 2 * (1 - t) * t * cp1x + t * t * ex,\n    y: Math.pow(1 - t, 2) * sy + 2 * (1 - t) * t * cp1y + t * t * ey,\n  };\n}\n\nexport function getQuadraticAngle(\n  t: number,\n  sx: number,\n  sy: number,\n  cp1x: number,\n  cp1y: number,\n  ex: number,\n  ey: number\n) {\n  const dx = 2 * (1 - t) * (cp1x - sx) + 2 * t * (ex - cp1x);\n  const dy = 2 * (1 - t) * (cp1y - sy) + 2 * t * (ey - cp1y);\n  return -Math.atan2(dx, dy) + 0.5 * Math.PI;\n}\n\nexport function getQuadraticStartEndPoint(\n  nodeSize: number,\n  degree: number,\n  sx: number,\n  sy: number,\n  ex: number,\n  ey: number\n) {\n  const radian = (degree / 180) * Math.PI;\n\n  return {\n    sx: sx + nodeSize * Math.cos(radian),\n    sy: sy + nodeSize * Math.sin(radian),\n    ex: ex + nodeSize * Math.cos(radian) * -1,\n    ey: ey + nodeSize * Math.sin(radian),\n  };\n}\n\nexport function getLoopEdgeBezierPoint(nodeSize: number, parallelSeq: number, x: number, y: number) {\n  // x goes from left to right\n  // y goes from up to down\n  // so we choose start at 270 and end at 180\n\n  const degreeStart = 270 + (parallelSeq - 1) * 5;\n  const radianStart = (degreeStart / 180) * Math.PI;\n  const degreeEnd = 180 - (parallelSeq - 1) * 5;\n  const radianEnd = (degreeEnd / 180) * Math.PI;\n\n  const sx = x + nodeSize * Math.cos(radianStart);\n  const sy = y + nodeSize * Math.sin(radianStart);\n  const ex = x + nodeSize * Math.cos(radianEnd);\n  const ey = y + nodeSize * Math.sin(radianEnd);\n\n  // logic copied from cytoscape\n  const len = 50 * parallelSeq * (parallelSeq / 3 + 1);\n\n  const cp1x = x + (nodeSize + len) * Math.cos(radianStart);\n  const cp1y = y + (nodeSize + len) * Math.sin(radianStart);\n  const cp2x = x + (nodeSize + len) * Math.cos(radianEnd);\n  const cp2y = y + (nodeSize + len) * Math.sin(radianEnd);\n\n  return {\n    sx,\n    sy,\n    cp1x,\n    cp1y,\n    cp2x,\n    cp2y,\n    ex,\n    ey,\n  };\n}\n\nexport function getPolygonPoints(width: number, edgePoints: number[]) {\n  const numPoints = edgePoints.length / 2;\n  const output = new Array(edgePoints.length * 2);\n  for (let i = 0; i < numPoints; i++) {\n    const j = i * 2;\n\n    // Position of current point\n    const x = edgePoints[j];\n    const y = edgePoints[j + 1];\n\n    // Start\n    const x0 = edgePoints[j - 2] !== undefined ? edgePoints[j - 2] : x;\n    const y0 = edgePoints[j - 1] !== undefined ? edgePoints[j - 1] : y;\n\n    // End\n    const x1 = edgePoints[j + 2] !== undefined ? edgePoints[j + 2] : x;\n    const y1 = edgePoints[j + 3] !== undefined ? edgePoints[j + 3] : y;\n\n    // Get the angle of the line\n    const a = Math.atan2(-x1 + x0, y1 - y0);\n    const deltaX = width * Math.cos(a);\n    const deltaY = width * Math.sin(a);\n\n    // Add the x, y at the beginning\n    output[j] = x + deltaX;\n    output[j + 1] = y + deltaY;\n\n    // Add the reflected x, y at the end\n    output[output.length - 1 - j - 1] = x - deltaX;\n    output[output.length - 1 - j] = y - deltaY;\n  }\n  // close the shape\n  output.push(output[0], output[1]);\n\n  return output;\n}\n","import { Container } from '@pixi/display';\nimport { Sprite } from '@pixi/sprite';\nimport { Texture } from '@pixi/core';\nimport { Polygon } from '@pixi/math';\nimport '@pixi/mixin-get-child-by-name';\nimport { SmoothGraphics as Graphics } from '@pixi/graphics-smooth';\nimport { IPointData } from '@pixi/math';\nimport { GRAPHICS_CURVES } from '@pixi/graphics';\n\nimport { colorToPixi } from '../utils/color';\nimport { EdgeStyle, NodeStyle } from '../utils/style';\nimport {\n  getCubicBezierAngle,\n  getCubicBezierXY,\n  getQuadraticAngle,\n  getQuadraticBezierXY,\n  getQuadraticStartEndPoint,\n  getLoopEdgeBezierPoint,\n  getPolygonPoints,\n} from '../utils/bezier';\nimport { TextureCache } from '../texture-cache';\n\nGRAPHICS_CURVES.minSegments = 8 * 8;\nconst DELIMETER = '::';\nconst WHITE = 0xffffff;\n\nconst EDGE_LINE = 'EDGE_LINE';\nconst EDGE_ARROW = 'EDGE_ARROW';\n\nconst EDGE_CURVE = 'EDGE_CURVE';\nconst EDGE_CURVE_ARROW = 'EDGE_CURVE_ARROW';\n\nconst ARROW_SIZE = 5;\n\nexport function createEdge(edgeGfx: Container) {\n  // edgeGfx -> edgeLine\n  const edgeLine = new Sprite(Texture.WHITE);\n  edgeLine.name = EDGE_LINE;\n  edgeLine.anchor.set(0.5);\n  edgeGfx.addChild(edgeLine);\n\n  // edgeGfx -> edgeArrow\n  const edgeArrow = new Sprite();\n  edgeArrow.name = EDGE_ARROW;\n  edgeArrow.anchor.set(0, 0.5);\n  edgeGfx.addChild(edgeArrow);\n\n  // edgeGfx -> edgeCurve\n  const edgeCurve = new Graphics();\n  edgeCurve.name = EDGE_CURVE;\n  edgeGfx.addChild(edgeCurve);\n\n  // edgeGfx -> edgeArrow\n  const edgeCurveArrow = new Graphics();\n  edgeCurveArrow.name = EDGE_CURVE_ARROW;\n  edgeGfx.addChild(edgeCurveArrow);\n}\n\nexport function updateEdgePosition(\n  edgeGfx: Container,\n  sourceNodePosition: IPointData,\n  targetNodePosition: IPointData,\n  nodeStyle: NodeStyle,\n  edgeStyle: EdgeStyle,\n  textureCache: TextureCache,\n  isDirected: boolean,\n  isSelfLoop: boolean,\n  parallelEdgeCount: number,\n  parallelSeq: number\n) {\n  const nodeSize = nodeStyle.size;\n  const [color, alpha] = colorToPixi(edgeStyle.color);\n  const length = Math.hypot(targetNodePosition.x - sourceNodePosition.x, targetNodePosition.y - sourceNodePosition.y);\n\n  const edgeLine = edgeGfx.getChildByName!(EDGE_LINE) as Sprite;\n  const edgeArrow = edgeGfx.getChildByName!(EDGE_ARROW) as Sprite;\n  const edgeCurve = edgeGfx.getChildByName!(EDGE_CURVE) as Graphics;\n  const edgeCurveArrow = edgeGfx.getChildByName!(EDGE_CURVE_ARROW) as Graphics;\n\n  edgeLine.visible = false;\n  edgeArrow.visible = false;\n  edgeCurve.visible = false;\n  edgeCurveArrow.visible = false;\n\n  if (isSelfLoop) {\n    edgeCurve.visible = true;\n    edgeCurveArrow.visible = true;\n\n    const { sx, sy, cp1x, cp1y, cp2x, cp2y, ex, ey } = getLoopEdgeBezierPoint(nodeSize, parallelSeq, 0, 0);\n\n    // only do clear when node position changed\n    edgeCurve.clear();\n    edgeCurve.lineStyle({ width: edgeStyle.width, color, alpha });\n    edgeCurve.moveTo(sx, sy);\n    edgeCurve.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, ex, ey);\n\n    // set hit area\n    changeHitArea(edgeCurve, edgeStyle.width);\n\n    // edgeGfx -> edgeCurveArrow\n    // only do clear when node position changed\n    edgeCurveArrow.clear();\n    const coord = getCubicBezierXY(1, sx, sy, cp1x, cp1y, cp2x, cp2y, ex, ey);\n    const angle = getCubicBezierAngle(1, sx, sy, cp1x, cp1y, cp2x, cp2y, ex, ey);\n\n    edgeCurveArrow.x = coord.x;\n    edgeCurveArrow.y = coord.y;\n    edgeCurveArrow.rotation = angle;\n\n    edgeCurveArrow.beginFill(color, alpha, true);\n    edgeCurveArrow.moveTo(-ARROW_SIZE * 2, -ARROW_SIZE);\n    edgeCurveArrow.lineTo(0, 0);\n    edgeCurveArrow.lineTo(-ARROW_SIZE * 2, ARROW_SIZE);\n    edgeCurveArrow.lineTo(-ARROW_SIZE * 2, -ARROW_SIZE);\n    edgeCurveArrow.closePath();\n    edgeCurveArrow.endFill();\n\n    return;\n  }\n\n  // edgeGfx -> edgeArrow\n  if (isStraightLine(isSelfLoop, parallelEdgeCount, parallelSeq)) {\n    edgeLine.visible = true;\n    edgeArrow.visible = true;\n\n    // edgeGfx -> edgeLine\n    edgeLine.width = length;\n\n    if (isDirected) {\n      // edgeGfx -> edgeArrow\n      const edgeArrowTextureKey = [EDGE_ARROW].join(DELIMETER);\n      const edgeArrowTexture = textureCache.get(edgeArrowTextureKey, () => {\n        const graphics = new Graphics();\n        graphics.beginFill(WHITE, 1.0, true);\n        graphics.moveTo(-ARROW_SIZE * 2, -ARROW_SIZE);\n        graphics.lineTo(0, 0);\n        graphics.lineTo(-ARROW_SIZE * 2, ARROW_SIZE);\n        graphics.lineTo(-ARROW_SIZE * 2, -ARROW_SIZE);\n        graphics.closePath();\n        graphics.endFill();\n\n        return graphics;\n      });\n\n      // todo(lin): seems add 0.5 will make the arrow better fit with node circle\n      //    may need change to this.renderer.resolution / 0.2\n      edgeArrow.x = length / 2 - nodeSize - ARROW_SIZE * 2 + 0.5;\n      edgeArrow.texture = edgeArrowTexture;\n      [edgeArrow.tint, edgeArrow.alpha] = colorToPixi(edgeStyle.color);\n    }\n  } else {\n    edgeCurve.visible = true;\n    edgeCurveArrow.visible = true;\n\n    // edgeGfx -> edgeCurve\n    const dir = parallelSeq % 2 === 0 ? 1 : -1;\n    const seqInDir = Math.ceil(parallelSeq / 2);\n\n    const { sx, sy, ex, ey } = getQuadraticStartEndPoint(nodeSize, 5 * seqInDir * dir, -length / 2, 0, length / 2, 0);\n    const curveHeight = length * 0.25 * seqInDir * dir;\n\n    // only do clear when node position changed\n    edgeCurve.clear();\n    edgeCurve.lineStyle({ width: 1, color, alpha });\n    edgeCurve.moveTo(sx, sy);\n    edgeCurve.quadraticCurveTo(0, curveHeight, ex, ey);\n\n    // set hit area\n    changeHitArea(edgeCurve, edgeStyle.width);\n\n    // edgeGfx -> edgeCurveArrow\n    // only do clear when node position changed\n    edgeCurveArrow.clear();\n    const coord = getQuadraticBezierXY(1, sx, sy, 0, curveHeight, ex, ey);\n    const angle = getQuadraticAngle(1, sx, sy, 0, curveHeight, ex, ey);\n\n    edgeCurveArrow.x = coord.x;\n    edgeCurveArrow.y = coord.y;\n    edgeCurveArrow.rotation = angle;\n\n    edgeCurveArrow.beginFill(color, alpha, true);\n    edgeCurveArrow.moveTo(-ARROW_SIZE * 2, -ARROW_SIZE);\n    edgeCurveArrow.lineTo(0, 0);\n    edgeCurveArrow.lineTo(-ARROW_SIZE * 2, ARROW_SIZE);\n    edgeCurveArrow.lineTo(-ARROW_SIZE * 2, -ARROW_SIZE);\n    edgeCurveArrow.closePath();\n    edgeCurveArrow.endFill();\n  }\n}\n\nexport function updateEdgeStyle(\n  edgeGfx: Container,\n  edgeStyle: EdgeStyle,\n  _textureCache: TextureCache,\n  _isDirected: boolean,\n  isSelfLoop: boolean,\n  parallelEdgeCount: number,\n  parallelSeq: number\n) {\n  if (isStraightLine(isSelfLoop, parallelEdgeCount, parallelSeq)) {\n    // edgeGfx -> edgeLine\n    const edgeLine = edgeGfx.getChildByName!(EDGE_LINE) as Sprite;\n    edgeLine.height = edgeStyle.width;\n    [edgeLine.tint, edgeLine.alpha] = colorToPixi(edgeStyle.color);\n  } else {\n    const [color, alpha] = colorToPixi(edgeStyle.color);\n    const edgeCurve = edgeGfx.getChildByName!(EDGE_CURVE) as Graphics;\n    edgeCurve.lineStyle({ width: edgeStyle.width, color, alpha });\n  }\n}\n\nexport function updateEdgeVisibility(\n  edgeGfx: Container,\n  zoomStep: number,\n  isSelfLoop: boolean,\n  parallelEdgeCount: number,\n  parallelSeq: number\n) {\n  const edgeLine = edgeGfx.getChildByName!(EDGE_LINE) as Sprite;\n  const edgeArrow = edgeGfx.getChildByName!(EDGE_ARROW) as Sprite;\n  const edgeCurve = edgeGfx.getChildByName!(EDGE_CURVE) as Graphics;\n  const edgeCurveArrow = edgeGfx.getChildByName!(EDGE_CURVE_ARROW) as Graphics;\n\n  if (isStraightLine(isSelfLoop, parallelEdgeCount, parallelSeq)) {\n    // edgeGfx -> edgeLine\n    edgeLine.visible = zoomStep >= 2;\n    // edgeGFX -> edgeArrow\n    edgeArrow.visible = zoomStep >= 3;\n\n    // hide curve\n    edgeCurve.visible = false;\n    edgeCurveArrow.visible = false;\n  } else {\n    // edgeGfx -> edgeCurve\n    edgeCurve.visible = zoomStep >= 2;\n    // edgeGfx -> edgeCurveArrow\n    edgeCurveArrow.visible = zoomStep >= 3;\n\n    // hide line\n    edgeLine.visible = false;\n    edgeArrow.visible = false;\n  }\n}\n\nfunction isStraightLine(isSelfLoop: boolean, parallelEdgeCount: number, parallelSeq: number) {\n  if (isSelfLoop) {\n    return false;\n  }\n  return parallelEdgeCount <= 1 || (parallelEdgeCount % 2 === 1 && parallelSeq === parallelEdgeCount);\n}\n\nfunction changeHitArea(edgeCurve: Graphics, width: number) {\n  const edgePoints = edgeCurve.currentPath.points;\n  const ploygonPoints = getPolygonPoints(width, edgePoints);\n  const shape = new Polygon(ploygonPoints);\n  edgeCurve.hitArea = shape;\n}\n","import { Container } from '@pixi/display';\nimport { Sprite } from '@pixi/sprite';\nimport { BitmapText } from '@pixi/text-bitmap';\nimport '@pixi/mixin-get-child-by-name';\nimport { colorToPixi } from '../utils/color';\nimport { EdgeStyle, NodeStyle } from '../utils/style';\nimport { textToPixi } from '../utils/text';\nimport { TextureCache } from '../texture-cache';\nimport { IPointData } from '@pixi/math';\nimport { getQuadraticBezierXY, getQuadraticStartEndPoint } from '../utils/bezier';\n\nconst DELIMETER = '::';\n\nconst EDGE_LABEL_TEXT = 'EDGE_LABEL_TEXT';\n\nexport function createEdgeLabel(edgeLabelGfx: Container) {\n  // edgeLabelGfx -> edgeLabelText\n  const edgeLabelText = new Sprite();\n  edgeLabelText.name = EDGE_LABEL_TEXT;\n  edgeLabelText.anchor.set(0.5);\n  edgeLabelGfx.addChild(edgeLabelText);\n}\n\n// !!! the label placement should keep consistent with edge line placement\nexport function updateLabelPosition(\n  edgeLabelGfx: Container,\n  sourceNodePosition: IPointData,\n  targetNodePosition: IPointData,\n  nodeStyle: NodeStyle,\n  edgeStyle: EdgeStyle,\n  textureCache: TextureCache,\n  _isDirected: boolean,\n  isSelfLoop: boolean,\n  parallelEdgeCount: number,\n  parallelSeq: number,\n  selfLoopHeight?: number // only for self loop edge\n) {\n  const nodeSize = nodeStyle.size;\n  const length = Math.hypot(targetNodePosition.x - sourceNodePosition.x, targetNodePosition.y - sourceNodePosition.y);\n  const labelDir = edgeLabelGfx.rotation >= -Math.PI / 2 && edgeLabelGfx.rotation <= Math.PI / 2 ? 1 : -1;\n\n  const edgeLabelText = edgeLabelGfx.getChildByName!(EDGE_LABEL_TEXT) as Sprite;\n\n  const edgeLabelTextTextureKey = [\n    EDGE_LABEL_TEXT,\n    edgeStyle.label.fontFamily,\n    edgeStyle.label.fontSize,\n    edgeStyle.label.content,\n  ].join(DELIMETER);\n\n  const edgeLabelTextTexture = textureCache.get(edgeLabelTextTextureKey, () => {\n    const text = textToPixi(edgeStyle.label.type, edgeStyle.label.content, {\n      fontFamily: edgeStyle.label.fontFamily,\n      fontSize: edgeStyle.label.fontSize,\n    });\n    return text;\n  });\n\n  edgeLabelText.texture = edgeLabelTextTexture;\n  // if dir is -1, we rotation the text, it make label easier to read.\n  edgeLabelText.rotation = labelDir > 0 ? 0 : Math.PI;\n\n  // see bezier.ts: y goes from up to down\n  let y = 0;\n\n  if (isSelfLoop) {\n    y = selfLoopHeight! + (-(edgeLabelTextTexture.height + edgeStyle.label.padding * 2) / 2) * labelDir;\n  } else if (parallelEdgeCount <= 1 || (parallelEdgeCount % 2 === 1 && parallelSeq === parallelEdgeCount)) {\n    y = (-(edgeLabelTextTexture.height + edgeStyle.label.padding * 2) / 2) * labelDir;\n  } else {\n    const dir = parallelSeq % 2 === 0 ? 1 : -1;\n    const seqInDir = Math.ceil(parallelSeq / 2);\n\n    const curveHeight = length * 0.25 * seqInDir * dir;\n    const { sx, sy, ex, ey } = getQuadraticStartEndPoint(nodeSize, 5 * seqInDir * dir, -length / 2, 0, length / 2, 0);\n\n    const center = getQuadraticBezierXY(0.5, sx, sy, 0, curveHeight, ex, ey);\n    y = center.y + (-(edgeLabelTextTexture.height + edgeStyle.label.padding * 2) / 2) * labelDir;\n  }\n\n  edgeLabelText.y = y;\n  [edgeLabelText.tint, edgeLabelText.alpha] = colorToPixi(edgeStyle.label.color);\n}\n\nexport function updateEdgeLabelVisibility(edgeLabelGfx: Container, zoomStep: number) {\n  // edgeLabelGfx -> edgeLabelText\n  const edgeLabelText = edgeLabelGfx.getChildByName!(EDGE_LABEL_TEXT) as BitmapText;\n  edgeLabelText.visible = zoomStep >= 3;\n}\n","import { Container } from '@pixi/display';\nimport { InteractionEvent } from '@pixi/interaction';\nimport { IPointData } from '@pixi/math';\nimport { TypedEmitter } from 'tiny-typed-emitter';\nimport { createEdge, updateEdgeStyle, updateEdgeVisibility, updateEdgePosition } from './renderers/edge';\nimport { EdgeStyle, NodeStyle } from './utils/style';\nimport { TextureCache } from './texture-cache';\nimport { createEdgeLabel, updateEdgeLabelVisibility, updateLabelPosition } from './renderers/edge-label';\nimport { getCubicBezierXY, getLoopEdgeBezierPoint } from './utils/bezier';\n\ninterface PixiEdgeEvents {\n  mousemove: (event: MouseEvent) => void;\n  mouseover: (event: MouseEvent) => void;\n  mouseout: (event: MouseEvent) => void;\n  mousedown: (event: MouseEvent) => void;\n  mouseup: (event: MouseEvent) => void;\n}\n\nexport class PixiEdge extends TypedEmitter<PixiEdgeEvents> {\n  edgeGfx: Container;\n  edgePlaceholderGfx: Container;\n\n  edgeLabelGfx: Container;\n  edgeLabelPlaceholderGfx: Container;\n\n  hovered: boolean = false;\n  // todo(lin)\n  //  later we need to support select state for edge\n  selected: boolean = false;\n\n  constructor() {\n    super();\n\n    this.edgeGfx = this.createEdge();\n    this.edgePlaceholderGfx = new Container();\n\n    this.edgeLabelGfx = this.createEdgeLabel();\n    this.edgeLabelPlaceholderGfx = new Container();\n  }\n\n  createEdge() {\n    const edgeGfx = new Container();\n    edgeGfx.interactive = true;\n    edgeGfx.buttonMode = true;\n    edgeGfx.on('mousemove', (event: InteractionEvent) =>\n      this.emit('mousemove', event.data.originalEvent as MouseEvent)\n    );\n    edgeGfx.on('mouseover', (event: InteractionEvent) =>\n      this.emit('mouseover', event.data.originalEvent as MouseEvent)\n    );\n    edgeGfx.on('mouseout', (event: InteractionEvent) => this.emit('mouseout', event.data.originalEvent as MouseEvent));\n    edgeGfx.on('mousedown', (event: InteractionEvent) =>\n      this.emit('mousedown', event.data.originalEvent as MouseEvent)\n    );\n    edgeGfx.on('mouseup', (event: InteractionEvent) => this.emit('mouseup', event.data.originalEvent as MouseEvent));\n    createEdge(edgeGfx);\n    return edgeGfx;\n  }\n\n  createEdgeLabel() {\n    const edgeLabelGfx = new Container();\n    createEdgeLabel(edgeLabelGfx);\n    return edgeLabelGfx;\n  }\n\n  updatePosition(\n    sourceNodePosition: IPointData,\n    targetNodePosition: IPointData,\n    nodeStyle: NodeStyle,\n    edgeStyle: EdgeStyle,\n    textureCache: TextureCache,\n    isDirected: boolean,\n    isSelfLoop: boolean,\n    parallelEdgeCount: number,\n    parallelSeq: number\n  ) {\n    const position = {\n      x: (sourceNodePosition.x + targetNodePosition.x) / 2,\n      y: (sourceNodePosition.y + targetNodePosition.y) / 2,\n    };\n    const rotation = Math.atan2(\n      targetNodePosition.y - sourceNodePosition.y,\n      targetNodePosition.x - sourceNodePosition.x\n    );\n    this.edgeGfx.position.copyFrom(position);\n    this.edgeGfx.rotation = rotation;\n\n    let selfLoopHeight: number | undefined = undefined;\n\n    if (isSelfLoop) {\n      // we need to do calculate here to setup correct coordinates\n      const nodeSize = nodeStyle.size;\n      let { sx, sy, cp1x, cp1y, cp2x, cp2y, ex, ey } = getLoopEdgeBezierPoint(\n        nodeSize,\n        parallelSeq,\n        sourceNodePosition.x,\n        sourceNodePosition.y\n      );\n      // const length = Math.hypot(sx - ex, sy - ey);\n\n      const position = {\n        x: (sx + ex) / 2,\n        y: (sy + ey) / 2,\n      };\n      const rotation = Math.atan2(ey - sy, ex - sx);\n      this.edgeLabelGfx.position.copyFrom(position);\n      this.edgeLabelGfx.rotation = rotation;\n\n      sourceNodePosition = {\n        x: -length / 2,\n        y: 0,\n      };\n      targetNodePosition = {\n        x: length / 2,\n        y: 0,\n      };\n\n      const center = getCubicBezierXY(0.5, sx, sy, cp1x, cp1y, cp2x, cp2y, ex, ey);\n\n      // we calculate self loop height here and pass to edge label\n      // note, we use position to calculate height\n      selfLoopHeight = Math.hypot(center.x - position.x, center.y - position.y);\n    } else {\n      this.edgeLabelGfx.position.copyFrom(position);\n      this.edgeLabelGfx.rotation = rotation;\n    }\n\n    updateEdgePosition(\n      this.edgeGfx,\n      sourceNodePosition,\n      targetNodePosition,\n      nodeStyle,\n      edgeStyle,\n      textureCache,\n      isDirected,\n      isSelfLoop,\n      parallelEdgeCount,\n      parallelSeq\n    );\n\n    updateLabelPosition(\n      this.edgeLabelGfx,\n      sourceNodePosition,\n      targetNodePosition,\n      nodeStyle,\n      edgeStyle,\n      textureCache,\n      isDirected,\n      isSelfLoop,\n      parallelEdgeCount,\n      parallelSeq,\n      selfLoopHeight\n    );\n  }\n\n  updateStyle(\n    edgeStyle: EdgeStyle,\n    textureCache: TextureCache,\n    isDirected: boolean,\n    isSelfLoop: boolean,\n    parallelEdgeCount: number,\n    parallelSeq: number\n  ) {\n    updateEdgeStyle(this.edgeGfx, edgeStyle, textureCache, isDirected, isSelfLoop, parallelEdgeCount, parallelSeq);\n  }\n\n  updateVisibility(zoomStep: number, isSelfLoop: boolean, parallelEdgeCount: number, parallelSeq: number) {\n    updateEdgeVisibility(this.edgeGfx, zoomStep, isSelfLoop, parallelEdgeCount, parallelSeq);\n    updateEdgeLabelVisibility(this.edgeLabelGfx, zoomStep);\n  }\n}\n","import { Application } from '@pixi/app';\nimport { TickerPlugin } from '@pixi/ticker';\nimport { AppLoaderPlugin, Loader } from '@pixi/loaders';\nimport { BitmapFontLoader } from '@pixi/text-bitmap';\nimport { Renderer, BatchRenderer } from '@pixi/core';\nimport { InteractionEvent, InteractionManager } from '@pixi/interaction';\nimport { Container } from '@pixi/display';\nimport { Point, IPointData, Rectangle } from '@pixi/math';\nimport { IAddOptions } from '@pixi/loaders';\nimport { Viewport } from 'pixi-viewport';\nimport { Cull } from '@pixi-essentials/cull';\n// import { Simple } from 'pixi-cull';\nimport { AbstractGraph } from 'graphology-types';\nimport { TypedEmitter } from 'tiny-typed-emitter';\nimport { GraphStyleDefinition, NodeStyleDefinition, resolveStyleDefinitions } from './utils/style';\nimport { TextType } from './utils/text';\nimport { BaseNodeAttributes, BaseEdgeAttributes } from './attributes';\nimport { TextureCache } from './texture-cache';\nimport { PixiNode } from './node';\nimport { PixiEdge } from './edge';\nimport { LINE_SCALE_MODE, settings } from '@pixi/graphics-smooth';\n\nApplication.registerPlugin(TickerPlugin);\nApplication.registerPlugin(AppLoaderPlugin);\nLoader.registerPlugin(BitmapFontLoader);\nRenderer.registerPlugin('batch', BatchRenderer);\nRenderer.registerPlugin('interaction', InteractionManager);\n\nconst DEFAULT_STYLE: GraphStyleDefinition = {\n  node: {\n    size: 15,\n    color: '#000000',\n    border: {\n      width: 2,\n      color: '#ffffff',\n    },\n    icon: {},\n    label: {\n      type: TextType.TEXT,\n      fontFamily: 'Arial',\n      fontSize: 12,\n      content: '',\n      color: '#333333',\n      padding: 4,\n    },\n  },\n  edge: {\n    width: 1,\n    color: '#cccccc',\n  },\n};\n\nconst WORLD_PADDING = 100;\n\nexport interface GraphOptions<\n  NodeAttributes extends BaseNodeAttributes = BaseNodeAttributes,\n  EdgeAttributes extends BaseEdgeAttributes = BaseEdgeAttributes\n> {\n  container: HTMLElement;\n  graph: AbstractGraph<NodeAttributes, EdgeAttributes>;\n  style: GraphStyleDefinition<NodeAttributes, EdgeAttributes>;\n  hoverStyle: GraphStyleDefinition<NodeAttributes, EdgeAttributes>;\n  selectStyle: GraphStyleDefinition<NodeAttributes, EdgeAttributes>;\n  resources?: IAddOptions[];\n}\n\ninterface PixiGraphEvents {\n  // background\n  rightClick: (event: MouseEvent) => void;\n\n  // node\n  nodeClick: (event: MouseEvent, nodeKey: string) => void;\n  nodeDoubleClick: (event: MouseEvent, nodeKey: string) => void;\n  nodeRightClick: (event: MouseEvent, nodeKey: string) => void;\n  nodeMousemove: (event: MouseEvent, nodeKey: string) => void;\n  nodeMouseover: (event: MouseEvent, nodeKey: string, rect: Rectangle) => void;\n  nodeMouseout: (event: MouseEvent, nodeKey: string) => void;\n  nodeMousedown: (event: MouseEvent, nodeKey: string) => void;\n  nodeMouseup: (event: MouseEvent, nodeKey: string) => void;\n\n  // edge\n  edgeClick: (event: MouseEvent, edgeKey: string) => void;\n  edgeMousemove: (event: MouseEvent, edgeKey: string) => void;\n  edgeMouseover: (event: MouseEvent, edgeKey: string) => void;\n  edgeMouseout: (event: MouseEvent, edgeKey: string) => void;\n  edgeMousedown: (event: MouseEvent, edgeKey: string) => void;\n  edgeMouseup: (event: MouseEvent, edgeKey: string) => void;\n}\n\nexport class PixiGraph<\n  NodeAttributes extends BaseNodeAttributes = BaseNodeAttributes,\n  EdgeAttributes extends BaseEdgeAttributes = BaseEdgeAttributes\n> extends TypedEmitter<PixiGraphEvents> {\n  container: HTMLElement;\n  graph: AbstractGraph<NodeAttributes, EdgeAttributes>;\n  style: GraphStyleDefinition<NodeAttributes, EdgeAttributes>;\n  hoverStyle: GraphStyleDefinition<NodeAttributes, EdgeAttributes>;\n  selectStyle: GraphStyleDefinition<NodeAttributes, EdgeAttributes>;\n  resources?: IAddOptions[];\n\n  private app: Application;\n  private textureCache: TextureCache;\n  private viewport: Viewport;\n  // private cull: Simple;\n  private resizeObserver: ResizeObserver;\n  private edgeLayer: Container;\n  private edgeLabelLayer: Container;\n  private frontEdgeLayer: Container;\n  private frontEdgeLabelLayer: Container;\n  private nodeLayer: Container;\n  private nodeLabelLayer: Container;\n  private frontNodeLayer: Container;\n  private frontNodeLabelLayer: Container;\n  private nodeKeyToNodeObject = new Map<string, PixiNode>();\n  private edgeKeyToEdgeObject = new Map<string, PixiEdge>();\n\n  private selectNodeKeys = new Set<string>();\n\n  private parallelEdgeMap = new Map<string, number>();\n\n  private mousedownNodeKey: string | null = null;\n  private mousedownEdgeKey: string | null = null;\n  private mouseDownPosition: { x: number; y: number } | null = null;\n\n  private onGraphNodeAddedBound = this.onGraphNodeAdded.bind(this);\n  private onGraphEdgeAddedBound = this.onGraphEdgeAdded.bind(this);\n  private onGraphNodeDroppedBound = this.onGraphNodeDropped.bind(this);\n  private onGraphEdgeDroppedBound = this.onGraphEdgeDropped.bind(this);\n  private onGraphClearedBound = this.onGraphCleared.bind(this);\n  private onGraphEdgesClearedBound = this.onGraphEdgesCleared.bind(this);\n  private onGraphNodeAttributesUpdatedBound = this.onGraphNodeAttributesUpdated.bind(this);\n  private onGraphEdgeAttributesUpdatedBound = this.onGraphEdgeAttributesUpdated.bind(this);\n  private onGraphEachNodeAttributesUpdatedBound = this.onGraphEachNodeAttributesUpdated.bind(this);\n  private onGraphEachEdgeAttributesUpdatedBound = this.onGraphEachEdgeAttributesUpdated.bind(this);\n  private onDocumentMouseMoveBound = this.onDocumentMouseMove.bind(this);\n  private onDocumentMouseUpBound = this.onDocumentMouseUp.bind(this);\n\n  constructor(options: GraphOptions<NodeAttributes, EdgeAttributes>) {\n    super();\n\n    this.container = options.container;\n    this.graph = options.graph;\n    this.style = options.style;\n    this.hoverStyle = options.hoverStyle;\n    this.selectStyle = options.selectStyle;\n    this.resources = options.resources;\n\n    if (!(this.container instanceof HTMLElement)) {\n      throw new Error('container should be a HTMLElement');\n    }\n\n    settings.LINE_SCALE_MODE = LINE_SCALE_MODE.NORMAL;\n\n    // create PIXI application\n    this.app = new Application({\n      resizeTo: this.container,\n      resolution: window.devicePixelRatio,\n      transparent: true,\n      antialias: true,\n      autoDensity: true,\n    });\n    this.container.appendChild(this.app.view);\n    // this.cull = new Simple({\n    //   dirtyTest: true,\n    // });\n\n    this.app.renderer.plugins.interaction.moveWhenInside = true;\n    this.app.view.addEventListener('wheel', (event) => {\n      event.preventDefault();\n    });\n\n    this.textureCache = new TextureCache(this.app.renderer);\n\n    // create PIXI viewport\n    this.viewport = new Viewport({\n      screenWidth: this.container.clientWidth,\n      screenHeight: this.container.clientHeight,\n      interaction: this.app.renderer.plugins.interaction,\n    })\n      .drag()\n      .pinch()\n      .wheel()\n      .decelerate()\n      .clampZoom({ maxScale: 5 });\n    this.app.stage.addChild(this.viewport);\n    this.viewport.on('mousedown', (event: InteractionEvent) => {\n      if (event.target === this.viewport) {\n        let mouseEvent = event.data.originalEvent as MouseEvent;\n        this.mouseDownPosition = {\n          x: mouseEvent.clientX,\n          y: mouseEvent.clientY,\n        };\n      }\n    });\n    this.viewport.on('mouseup', (event: InteractionEvent) => {\n      if (event.target === this.viewport && this.mouseDownPosition) {\n        let mouseEvent = event.data.originalEvent as MouseEvent;\n\n        let diff =\n          Math.sqrt(Math.abs(mouseEvent.clientX - this.mouseDownPosition.x)) +\n          Math.sqrt(Math.abs(mouseEvent.clientY - this.mouseDownPosition.y));\n\n        if (diff <= 2) {\n          this.selectNodeKeys.forEach((nodeKey) => {\n            this.unselectNode(nodeKey);\n          });\n          this.selectNodeKeys.clear();\n        }\n\n        this.mouseDownPosition = null;\n      }\n    });\n\n    this.viewport.on('rightup', (event: InteractionEvent) => {\n      if (event.target === this.viewport) {\n        let mouseEvent = event.data.originalEvent as MouseEvent;\n        this.emit('rightClick', mouseEvent);\n      }\n    });\n\n    // create layers\n    this.edgeLayer = new Container();\n    this.edgeLabelLayer = new Container();\n    this.frontEdgeLayer = new Container();\n    this.frontEdgeLabelLayer = new Container();\n    this.nodeLayer = new Container();\n    this.nodeLabelLayer = new Container();\n    this.frontNodeLayer = new Container();\n    this.frontNodeLabelLayer = new Container();\n    this.viewport.addChild(this.edgeLayer);\n    this.viewport.addChild(this.edgeLabelLayer);\n    this.viewport.addChild(this.frontEdgeLayer);\n    this.viewport.addChild(this.frontEdgeLabelLayer);\n    this.viewport.addChild(this.nodeLayer);\n    this.viewport.addChild(this.nodeLabelLayer);\n    this.viewport.addChild(this.frontNodeLayer);\n    this.viewport.addChild(this.frontNodeLabelLayer);\n\n    this.resizeObserver = new ResizeObserver(() => {\n      this.app.resize();\n      this.viewport.resize(this.container.clientWidth, this.container.clientHeight);\n      this.updateGraphVisibility();\n    });\n\n    // preload resources\n    if (this.resources) {\n      this.app.loader.add(this.resources);\n    }\n    this.app.loader.load(() => {\n      this.viewport.on('frame-end', () => {\n        if (this.viewport.dirty) {\n          this.updateGraphVisibility();\n          this.viewport.dirty = false;\n        }\n      });\n\n      this.resizeObserver.observe(this.container);\n\n      // need to calculate parallel edge before register event listener\n      this.calculateParallelEdge();\n\n      // listen to graph changes\n      this.graph.on('nodeAdded', this.onGraphNodeAddedBound);\n      this.graph.on('edgeAdded', this.onGraphEdgeAddedBound);\n      this.graph.on('nodeDropped', this.onGraphNodeDroppedBound);\n      this.graph.on('edgeDropped', this.onGraphEdgeDroppedBound);\n      this.graph.on('cleared', this.onGraphClearedBound);\n      this.graph.on('edgesCleared', this.onGraphEdgesClearedBound);\n      this.graph.on('nodeAttributesUpdated', this.onGraphNodeAttributesUpdatedBound);\n      this.graph.on('edgeAttributesUpdated', this.onGraphEdgeAttributesUpdatedBound);\n      this.graph.on('eachNodeAttributesUpdated', this.onGraphEachNodeAttributesUpdatedBound);\n      this.graph.on('eachEdgeAttributesUpdated', this.onGraphEachEdgeAttributesUpdatedBound);\n\n      // initial draw\n      this.createGraph();\n      this.resetView();\n    });\n  }\n\n  destroy() {\n    this.graph.off('nodeAdded', this.onGraphNodeAddedBound);\n    this.graph.off('edgeAdded', this.onGraphEdgeAddedBound);\n    this.graph.off('nodeDropped', this.onGraphNodeDroppedBound);\n    this.graph.off('edgeDropped', this.onGraphEdgeDroppedBound);\n    this.graph.off('cleared', this.onGraphClearedBound);\n    this.graph.off('edgesCleared', this.onGraphEdgesClearedBound);\n    this.graph.off('nodeAttributesUpdated', this.onGraphNodeAttributesUpdatedBound);\n    this.graph.off('edgeAttributesUpdated', this.onGraphEdgeAttributesUpdatedBound);\n    this.graph.off('eachNodeAttributesUpdated', this.onGraphEachNodeAttributesUpdatedBound);\n    this.graph.off('eachEdgeAttributesUpdated', this.onGraphEachEdgeAttributesUpdatedBound);\n\n    this.resizeObserver.disconnect();\n    this.resizeObserver = undefined!;\n\n    this.textureCache.destroy();\n    this.textureCache = undefined!;\n\n    this.app.destroy(true, { children: true, texture: true, baseTexture: true });\n    this.app = undefined!;\n  }\n\n  private get zoomStep() {\n    return Math.min(this.viewport.worldWidth, this.viewport.worldHeight) / 10;\n  }\n\n  zoomIn() {\n    this.viewport.zoom(-this.zoomStep, true);\n  }\n\n  zoomOut() {\n    this.viewport.zoom(this.zoomStep, true);\n  }\n\n  resetView() {\n    const nodesX = this.graph.nodes().map((nodeKey) => this.graph.getNodeAttribute(nodeKey, 'x'));\n    const nodesY = this.graph.nodes().map((nodeKey) => this.graph.getNodeAttribute(nodeKey, 'y'));\n    const minX = Math.min(...nodesX);\n    const maxX = Math.max(...nodesX);\n    const minY = Math.min(...nodesY);\n    const maxY = Math.max(...nodesY);\n\n    const graphWidth = Math.abs(maxX - minX);\n    const graphHeight = Math.abs(maxY - minY);\n    const graphCenter = new Point(minX + graphWidth / 2, minY + graphHeight / 2);\n\n    const worldWidth = graphWidth + WORLD_PADDING * 2;\n    const worldHeight = graphHeight + WORLD_PADDING * 2;\n\n    // TODO: update worldWidth/worldHeight when graph is updated?\n    this.viewport.resize(this.container.clientWidth, this.container.clientHeight, worldWidth, worldHeight);\n\n    this.viewport.setZoom(1); // otherwise scale is 0 when initialized in React useEffect\n    this.viewport.center = graphCenter;\n    this.viewport.fit(true);\n  }\n\n  private calculateParallelEdge() {\n    let parallelEdgeMap = new Map<string, number>();\n    this.graph.forEachEdge(\n      (edgeKey: string, _edgeAttributes: EdgeAttributes, sourceNodeKey: string, targetNodeKey: string) => {\n        const key = `${sourceNodeKey}_${targetNodeKey}`;\n        const count = (parallelEdgeMap.get(key) || 0) + 1;\n        parallelEdgeMap.set(key, count);\n        this.graph.setEdgeAttribute(edgeKey, 'parallelSeq', count);\n      }\n    );\n    this.parallelEdgeMap = parallelEdgeMap;\n  }\n\n  private onGraphNodeAdded(data: { key: string; attributes: NodeAttributes }) {\n    this.calculateParallelEdge();\n    const nodeKey = data.key;\n    const nodeAttributes = data.attributes;\n    this.createNode(nodeKey, nodeAttributes);\n  }\n\n  private onGraphEdgeAdded(data: { key: string; attributes: EdgeAttributes; source: string; target: string }) {\n    this.calculateParallelEdge();\n    const edgeKey = data.key;\n    const edgeAttributes = data.attributes;\n    const sourceNodeKey = data.source;\n    const targetNodeKey = data.target;\n    const sourceNodeAttributes = this.graph.getNodeAttributes(sourceNodeKey);\n    const targetNodeAttributes = this.graph.getNodeAttributes(targetNodeKey);\n    this.createEdge(edgeKey, edgeAttributes, sourceNodeKey, targetNodeKey, sourceNodeAttributes, targetNodeAttributes);\n  }\n\n  private onGraphNodeDropped(data: { key: string }) {\n    this.calculateParallelEdge();\n    const nodeKey = data.key;\n    this.dropNode(nodeKey);\n  }\n\n  private onGraphEdgeDropped(data: { key: string }) {\n    this.calculateParallelEdge();\n    const edgeKey = data.key;\n    this.dropEdge(edgeKey);\n  }\n\n  private onGraphCleared() {\n    Array.from(this.edgeKeyToEdgeObject.keys()).forEach(this.dropEdge.bind(this));\n    Array.from(this.nodeKeyToNodeObject.keys()).forEach(this.dropNode.bind(this));\n  }\n\n  private onGraphEdgesCleared() {\n    Array.from(this.edgeKeyToEdgeObject.keys()).forEach(this.dropEdge.bind(this));\n  }\n\n  private onGraphNodeAttributesUpdated(data: { key: string }) {\n    const nodeKey = data.key;\n    this.updateNodeStyleByKey(nodeKey);\n    // TODO: normalize position?\n  }\n\n  private onGraphEdgeAttributesUpdated(data: { key: string }) {\n    const edgeKey = data.key;\n    this.updateEdgeStyleByKey(edgeKey);\n  }\n\n  private onGraphEachNodeAttributesUpdated() {\n    this.graph.forEachNode(this.updateNodeStyle.bind(this));\n  }\n\n  private onGraphEachEdgeAttributesUpdated() {\n    this.graph.forEachEdge(this.updateEdgeStyle.bind(this));\n  }\n\n  private setNodeStatus(nodeKey: string, status: 'hovered' | 'selected') {\n    const node = this.nodeKeyToNodeObject.get(nodeKey)!;\n\n    // selected > hovered\n    if (status === 'hovered' && !node.selected) {\n      if (node.hovered) {\n        return;\n      }\n\n      // update style\n      node.hovered = true;\n    } else if (status === 'selected') {\n      if (node.selected) {\n        return;\n      }\n\n      node.selected = true;\n    }\n\n    this.updateNodeStyleByKey(nodeKey);\n\n    // move to front\n    const nodeIndex = this.nodeLayer.children.indexOf(node.nodeGfx);\n    // hover then select, the select can not find\n    if (nodeIndex >= 0) {\n      this.nodeLayer.removeChildAt(nodeIndex);\n      this.nodeLabelLayer.removeChildAt(nodeIndex);\n      this.frontNodeLayer.removeChildAt(nodeIndex);\n      this.frontNodeLabelLayer.removeChildAt(nodeIndex);\n      this.nodeLayer.addChild(node.nodePlaceholderGfx);\n      this.nodeLabelLayer.addChild(node.nodeLabelPlaceholderGfx);\n      this.frontNodeLayer.addChild(node.nodeGfx);\n      this.frontNodeLabelLayer.addChild(node.nodeLabelGfx);\n    }\n  }\n\n  private unsetNodeStatus(nodeKey: string, status: 'hovered' | 'selected') {\n    const node = this.nodeKeyToNodeObject.get(nodeKey)!;\n\n    if (status === 'hovered' && !node.selected) {\n      if (!node.hovered) {\n        return;\n      }\n\n      // update style\n      node.hovered = false;\n    } else if (status === 'selected') {\n      if (!node.selected) {\n        return;\n      }\n\n      node.selected = false;\n      // clear hovered state when unselect\n      node.hovered = false;\n    }\n    this.updateNodeStyleByKey(nodeKey);\n\n    // move to front\n    if (!node.selected && !node.hovered) {\n      const nodeIndex = this.frontNodeLayer.getChildIndex(node.nodeGfx);\n      this.nodeLayer.removeChildAt(nodeIndex);\n      this.nodeLabelLayer.removeChildAt(nodeIndex);\n      this.frontNodeLayer.removeChildAt(nodeIndex);\n      this.frontNodeLabelLayer.removeChildAt(nodeIndex);\n      this.nodeLayer.addChild(node.nodeGfx);\n      this.nodeLabelLayer.addChild(node.nodeLabelGfx);\n      this.frontNodeLayer.addChild(node.nodePlaceholderGfx);\n      this.frontNodeLabelLayer.addChild(node.nodeLabelPlaceholderGfx);\n    }\n  }\n\n  private selectNode(nodeKey: string) {\n    this.setNodeStatus(nodeKey, 'selected');\n  }\n\n  private unselectNode(nodeKey: string) {\n    this.unsetNodeStatus(nodeKey, 'selected');\n  }\n\n  private hoverNode(nodeKey: string) {\n    this.setNodeStatus(nodeKey, 'hovered');\n  }\n\n  private unhoverNode(nodeKey: string) {\n    this.unsetNodeStatus(nodeKey, 'hovered');\n  }\n\n  private hoverEdge(edgeKey: string) {\n    const edge = this.edgeKeyToEdgeObject.get(edgeKey)!;\n    if (edge.hovered) {\n      return;\n    }\n\n    // update style\n    edge.hovered = true;\n    this.updateEdgeStyleByKey(edgeKey);\n\n    // move to front\n    const edgeIndex = this.edgeLayer.getChildIndex(edge.edgeGfx);\n    if (edgeIndex >= 0) {\n      this.edgeLayer.removeChildAt(edgeIndex);\n      this.edgeLabelLayer.removeChildAt(edgeIndex);\n      this.frontEdgeLayer.removeChildAt(edgeIndex);\n      this.frontEdgeLabelLayer.removeChildAt(edgeIndex);\n      this.edgeLayer.addChild(edge.edgePlaceholderGfx);\n      this.edgeLabelLayer.addChild(edge.edgeLabelPlaceholderGfx);\n      this.frontEdgeLayer.addChild(edge.edgeGfx);\n      this.frontEdgeLabelLayer.addChild(edge.edgeLabelGfx);\n    }\n  }\n\n  private unhoverEdge(edgeKey: string) {\n    const edge = this.edgeKeyToEdgeObject.get(edgeKey)!;\n    if (!edge.hovered) {\n      return;\n    }\n\n    // update style\n    edge.hovered = false;\n    this.updateEdgeStyleByKey(edgeKey);\n\n    // move back\n    const edgeIndex = this.frontEdgeLayer.getChildIndex(edge.edgeGfx);\n    if (edgeIndex >= 0) {\n      this.edgeLayer.removeChildAt(edgeIndex);\n      this.edgeLabelLayer.removeChildAt(edgeIndex);\n      this.frontEdgeLayer.removeChildAt(edgeIndex);\n      this.frontEdgeLabelLayer.removeChildAt(edgeIndex);\n      this.edgeLayer.addChild(edge.edgeGfx);\n      this.edgeLabelLayer.addChild(edge.edgeLabelGfx);\n      this.frontEdgeLayer.addChild(edge.edgePlaceholderGfx);\n      this.frontEdgeLabelLayer.addChild(edge.edgeLabelPlaceholderGfx);\n    }\n  }\n\n  private moveNode(nodeKey: string, point: IPointData) {\n    this.graph.setNodeAttribute(nodeKey, 'x', point.x);\n    this.graph.setNodeAttribute(nodeKey, 'y', point.y);\n\n    const node = this.nodeKeyToNodeObject.get(nodeKey)!;\n    const nodePosition = { x: point.x, y: point.y };\n    node.updatePosition(nodePosition);\n\n    // update style\n    this.updateNodeStyleByKey(nodeKey);\n    this.graph.edges(nodeKey).forEach(this.updateEdgeStyleByKey.bind(this));\n  }\n\n  private moveNodebyDelta(nodeKey: string, deltaX: number, deltaY: number) {\n    let x = this.graph.getNodeAttribute(nodeKey, 'x') as number;\n    let y = this.graph.getNodeAttribute(nodeKey, 'y') as number;\n\n    this.graph.setNodeAttribute(nodeKey, 'x', x + deltaX);\n    this.graph.setNodeAttribute(nodeKey, 'y', y + deltaY);\n\n    const node = this.nodeKeyToNodeObject.get(nodeKey)!;\n    const nodePosition = { x: x + deltaX, y: y + deltaY };\n    node.updatePosition(nodePosition);\n\n    // update style\n    this.updateNodeStyleByKey(nodeKey);\n    this.graph.edges(nodeKey).forEach(this.updateEdgeStyleByKey.bind(this));\n  }\n\n  private enableNodeDragging() {\n    this.viewport.pause = true; // disable viewport dragging\n\n    document.addEventListener('mousemove', this.onDocumentMouseMoveBound);\n    document.addEventListener('mouseup', this.onDocumentMouseUpBound, { once: true });\n  }\n\n  private onDocumentMouseMove(event: MouseEvent) {\n    const eventPosition = new Point(event.offsetX, event.offsetY);\n    const worldPosition = this.viewport.toWorld(eventPosition);\n    if (this.mousedownNodeKey) {\n      if (this.selectNodeKeys.has(this.mousedownNodeKey)) {\n        let prevX = this.graph.getNodeAttribute(this.mousedownNodeKey, 'x') as number;\n        let preY = this.graph.getNodeAttribute(this.mousedownNodeKey, 'y') as number;\n        let deltaX = worldPosition.x - prevX;\n        let deltaY = worldPosition.y - preY;\n\n        this.selectNodeKeys.forEach((nodeKey) => this.moveNodebyDelta(nodeKey, deltaX, deltaY));\n      } else {\n        this.moveNode(this.mousedownNodeKey, worldPosition);\n      }\n    }\n  }\n\n  private onDocumentMouseUp() {\n    this.viewport.pause = false; // enable viewport dragging\n\n    document.removeEventListener('mousemove', this.onDocumentMouseMoveBound);\n\n    this.mousedownNodeKey = null;\n    this.mousedownEdgeKey = null;\n  }\n\n  private createGraph() {\n    this.graph.forEachNode(this.createNode.bind(this));\n    this.graph.forEachEdge(this.createEdge.bind(this));\n\n    // todo\n    // when graph change(position change or add/delete new node)\n    // should mark related object dirty.\n    // @ts-ignore\n    // (this.viewport.children as Container[]).map((layer) => this.cull.addList(layer.children));\n  }\n\n  private createNode(nodeKey: string, nodeAttributes: NodeAttributes) {\n    const node = new PixiNode();\n    node.on('mousemove', (event: MouseEvent) => {\n      this.emit('nodeMousemove', event, nodeKey);\n    });\n    node.on('mouseover', (event: MouseEvent) => {\n      if (!this.mousedownNodeKey) {\n        this.hoverNode(nodeKey);\n      }\n      this.emit('nodeMouseover', event, nodeKey, node.nodeGfx.getBounds());\n    });\n    node.on('mouseout', (event: MouseEvent) => {\n      if (!this.mousedownNodeKey) {\n        this.unhoverNode(nodeKey);\n      }\n      this.emit('nodeMouseout', event, nodeKey);\n    });\n    node.on('mousedown', (event: MouseEvent) => {\n      this.mousedownNodeKey = nodeKey;\n      this.enableNodeDragging();\n      this.emit('nodeMousedown', event, nodeKey);\n      this.mouseDownPosition = {\n        x: event.clientX,\n        y: event.clientY,\n      };\n    });\n\n    node.on('rightdown', (_event: MouseEvent) => {\n      this.mousedownNodeKey = nodeKey;\n    });\n    node.on('rightup', (event: MouseEvent) => {\n      if (this.mousedownNodeKey === nodeKey) {\n        this.emit('nodeRightClick', event, nodeKey);\n      }\n      this.mousedownNodeKey = null;\n    });\n\n    const doubleClickDelayMs = 350;\n    let previousTapStamp = 0;\n\n    node.on('mouseup', (event: MouseEvent) => {\n      this.emit('nodeMouseup', event, nodeKey);\n\n      // why native click event doesn't work?\n      if (this.mousedownNodeKey === nodeKey && this.mouseDownPosition) {\n        let diff =\n          Math.sqrt(Math.abs(event.clientX - this.mouseDownPosition.x)) +\n          Math.sqrt(Math.abs(event.clientY - this.mouseDownPosition.y));\n\n        if (diff <= 2) {\n          if (event.metaKey || event.ctrlKey || event.shiftKey) {\n            this.selectNodeKeys.add(nodeKey);\n            this.selectNode(nodeKey);\n          } else {\n            this.selectNodeKeys.forEach((nodeKey) => {\n              this.unselectNode(nodeKey);\n            });\n            this.selectNodeKeys.clear();\n\n            this.selectNodeKeys.add(nodeKey);\n            this.selectNode(nodeKey);\n          }\n\n          this.emit('nodeClick', event, nodeKey);\n\n          // check for double click\n          if (event.shiftKey || event.ctrlKey || event.metaKey) {\n            return;\n          }\n\n          const currentTapStamp = event.timeStamp;\n          const msFromLastTap = currentTapStamp - previousTapStamp;\n\n          previousTapStamp = currentTapStamp;\n          if (msFromLastTap < doubleClickDelayMs) {\n            this.emit('nodeDoubleClick', event, nodeKey);\n            return;\n          }\n        }\n      }\n      this.mousedownNodeKey = null;\n    });\n    this.nodeLayer.addChild(node.nodeGfx);\n    this.nodeLabelLayer.addChild(node.nodeLabelGfx);\n    this.frontNodeLayer.addChild(node.nodePlaceholderGfx);\n    this.frontNodeLabelLayer.addChild(node.nodeLabelPlaceholderGfx);\n    this.nodeKeyToNodeObject.set(nodeKey, node);\n\n    const nodePosition = { x: nodeAttributes.x, y: nodeAttributes.y };\n    node.updatePosition(nodePosition);\n\n    this.updateNodeStyle(nodeKey, nodeAttributes);\n  }\n\n  private createEdge(\n    edgeKey: string,\n    edgeAttributes: EdgeAttributes,\n    sourceNodeKey: string,\n    targetNodeKey: string,\n    sourceNodeAttributes: NodeAttributes,\n    targetNodeAttributes: NodeAttributes\n  ) {\n    const edge = new PixiEdge();\n    edge.on('mousemove', (event: MouseEvent) => {\n      this.emit('edgeMousemove', event, edgeKey);\n    });\n    edge.on('mouseover', (event: MouseEvent) => {\n      this.hoverEdge(edgeKey);\n      this.emit('edgeMouseover', event, edgeKey);\n    });\n    edge.on('mouseout', (event: MouseEvent) => {\n      this.unhoverEdge(edgeKey);\n      this.emit('edgeMouseout', event, edgeKey);\n    });\n    edge.on('mousedown', (event: MouseEvent) => {\n      this.mousedownEdgeKey = edgeKey;\n      this.emit('edgeMousedown', event, edgeKey);\n    });\n    edge.on('mouseup', (event: MouseEvent) => {\n      this.emit('edgeMouseup', event, edgeKey);\n      // why native click event doesn't work?\n      if (this.mousedownEdgeKey === edgeKey) {\n        this.emit('edgeClick', event, edgeKey);\n      }\n    });\n    this.edgeLayer.addChild(edge.edgeGfx);\n    this.edgeLabelLayer.addChild(edge.edgeLabelGfx);\n    this.frontEdgeLayer.addChild(edge.edgePlaceholderGfx);\n    this.frontEdgeLabelLayer.addChild(edge.edgeLabelPlaceholderGfx);\n    this.edgeKeyToEdgeObject.set(edgeKey, edge);\n\n    this.updateEdgeStyle(\n      edgeKey,\n      edgeAttributes,\n      sourceNodeKey,\n      targetNodeKey,\n      sourceNodeAttributes,\n      targetNodeAttributes\n    );\n  }\n\n  private dropNode(nodeKey: string) {\n    const node = this.nodeKeyToNodeObject.get(nodeKey)!;\n\n    this.nodeLayer.removeChild(node.nodeGfx);\n    this.nodeLabelLayer.removeChild(node.nodeLabelGfx);\n    this.frontNodeLayer.removeChild(node.nodePlaceholderGfx);\n    this.frontNodeLabelLayer.removeChild(node.nodeLabelPlaceholderGfx);\n    this.nodeKeyToNodeObject.delete(nodeKey);\n  }\n\n  private dropEdge(edgeKey: string) {\n    const edge = this.edgeKeyToEdgeObject.get(edgeKey)!;\n\n    this.edgeLayer.removeChild(edge.edgeGfx);\n    this.edgeLabelLayer.removeChild(edge.edgeLabelGfx);\n    this.frontEdgeLayer.removeChild(edge.edgePlaceholderGfx);\n    this.frontEdgeLabelLayer.removeChild(edge.edgeLabelPlaceholderGfx);\n    this.edgeKeyToEdgeObject.delete(edgeKey);\n  }\n\n  private updateNodeStyleByKey(nodeKey: string) {\n    const nodeAttributes = this.graph.getNodeAttributes(nodeKey);\n    this.updateNodeStyle(nodeKey, nodeAttributes);\n  }\n\n  private updateNodeStyle(nodeKey: string, nodeAttributes: NodeAttributes) {\n    const node = this.nodeKeyToNodeObject.get(nodeKey)!;\n\n    let stateStyle: NodeStyleDefinition<NodeAttributes> | undefined = undefined;\n    if (node.selected) {\n      stateStyle = this.selectStyle.node;\n    } else if (node.hovered) {\n      stateStyle = this.hoverStyle.node;\n    }\n\n    const nodeStyleDefinitions = [DEFAULT_STYLE.node, this.style.node, stateStyle];\n    const nodeStyle = resolveStyleDefinitions(nodeStyleDefinitions, nodeAttributes);\n    node.updateStyle(nodeStyle, this.textureCache);\n  }\n\n  private updateEdgeStyleByKey(edgeKey: string) {\n    const edgeAttributes = this.graph.getEdgeAttributes(edgeKey);\n    const sourceNodeKey = this.graph.source(edgeKey);\n    const targetNodeKey = this.graph.target(edgeKey);\n    const sourceNodeAttributes = this.graph.getNodeAttributes(sourceNodeKey);\n    const targetNodeAttributes = this.graph.getNodeAttributes(targetNodeKey);\n    this.updateEdgeStyle(\n      edgeKey,\n      edgeAttributes,\n      sourceNodeKey,\n      targetNodeKey,\n      sourceNodeAttributes,\n      targetNodeAttributes\n    );\n  }\n\n  private updateEdgeStyle(\n    edgeKey: string,\n    edgeAttributes: EdgeAttributes,\n    sourceNodeKey: string,\n    targetNodeKey: string,\n    _sourceNodeAttributes: NodeAttributes,\n    targetNodeAttributes: NodeAttributes\n  ) {\n    const key = `${sourceNodeKey}_${targetNodeKey}`;\n    const parallelEdgeCount = this.parallelEdgeMap.get(key) || 1;\n    const parallelSeq = this.graph.getEdgeAttribute(edgeKey, 'parallelSeq') as number;\n\n    const isDirected = this.graph.isDirected(edgeKey);\n\n    const edge = this.edgeKeyToEdgeObject.get(edgeKey)!;\n    const sourceNode = this.nodeKeyToNodeObject.get(sourceNodeKey)!;\n    const targetNode = this.nodeKeyToNodeObject.get(targetNodeKey)!;\n\n    const sourceNodePosition = { x: sourceNode.nodeGfx.position.x, y: sourceNode.nodeGfx.position.y };\n    const targetNodePosition = { x: targetNode.nodeGfx.position.x, y: targetNode.nodeGfx.position.y };\n\n    const nodeStyleDefinitions = [DEFAULT_STYLE.node, this.style.node];\n    const nodeStyle = resolveStyleDefinitions(nodeStyleDefinitions, targetNodeAttributes);\n\n    const edgeStyleDefinitions = [DEFAULT_STYLE.edge, this.style.edge, edge.hovered ? this.hoverStyle.edge : undefined];\n    const edgeStyle = resolveStyleDefinitions(edgeStyleDefinitions, edgeAttributes);\n\n    edge.updatePosition(\n      sourceNodePosition,\n      targetNodePosition,\n      nodeStyle,\n      edgeStyle,\n      this.textureCache,\n      isDirected,\n      sourceNodeKey === targetNodeKey,\n      parallelEdgeCount,\n      parallelSeq\n    );\n\n    edge.updateStyle(\n      edgeStyle,\n      this.textureCache,\n      isDirected,\n      sourceNodeKey === targetNodeKey,\n      parallelEdgeCount,\n      parallelSeq\n    );\n  }\n\n  private updateGraphVisibility() {\n    // culling todo(rotation cull have bug)\n    // https://github.com/davidfig/pixi-cull/issues/2\n    // this.cull.cull(this.viewport.getVisibleBounds(), false);\n    // should refer https://github.com/ShukantPal/pixi-essentials/tree/master/packages/cull\n\n    // original culling have performance issue.\n    const cull = new Cull();\n    cull.addAll((this.viewport.children as Container[]).map((layer) => layer.children).flat());\n    cull.cull(this.app.renderer.screen);\n\n    // console.log(\n    //   Array.from((cull as any)._targetList as Set<DisplayObject>).filter(x => x.visible === true).length,\n    //   Array.from((cull as any)._targetList as Set<DisplayObject>).filter(x => x.visible === false).length\n    // );\n\n    // levels of detail\n    const zoom = this.viewport.scale.x;\n    const zoomSteps = [0.1, 0.2, 0.4, Infinity];\n    const zoomStep = zoomSteps.findIndex((zoomStep) => zoom <= zoomStep);\n    // console.log(zoom, zoomStep);\n\n    // zoomStep = 0, zoom <= 0.1\n    //    node background\n    // zoomStep = 1,    0.1 < zoom <= 0.2\n    //    node border\n    // zoomStep = 2, 0.2 < zoom <= 0.4\n    //    node icon\n    //    edge (line/parallel edge/self loop edge)\n    // zoomStep = 3,  0.4 < zoom < Infinity\n    //    node label\n    //    edge arrow\n\n    this.graph.forEachNode((nodeKey) => {\n      const node = this.nodeKeyToNodeObject.get(nodeKey)!;\n      node.updateVisibility(zoomStep);\n    });\n\n    this.graph.forEachEdge(\n      (edgeKey: string, _edgeAttributes: EdgeAttributes, sourceNodeKey: string, targetNodeKey: string) => {\n        const key = `${sourceNodeKey}_${targetNodeKey}`;\n        const parallelEdgeCount = this.parallelEdgeMap.get(key) || 0;\n        const parallelSeq = this.graph.getEdgeAttribute(edgeKey, 'parallelSeq') as number;\n\n        const edge = this.edgeKeyToEdgeObject.get(edgeKey)!;\n        edge.updateVisibility(zoomStep, sourceNodeKey === targetNodeKey, parallelEdgeCount, parallelSeq);\n      }\n    );\n  }\n}\n"],"names":["WHITE","TextType","text","Text","BitmapText","deepmerge","Rectangle","SCALE_MODES","rgba","rgb2hex","DELIMETER","Circle","Sprite","Graphics","Texture","Container","TypedEmitter","GRAPHICS_CURVES","Polygon","Application","TickerPlugin","AppLoaderPlugin","Loader","BitmapFontLoader","Renderer","BatchRenderer","InteractionManager","settings","LINE_SCALE_MODE","Viewport","Point","cull","Cull"],"mappings":"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"}