{"version":3,"file":"pixi-graph.cjs.js","sources":["../src/utils/text.ts","../src/utils/style.ts","../src/texture-cache.ts","../src/utils/color.ts","../src/renderers/node.ts","../src/renderers/node-label.ts","../src/node.ts","../src/renderers/edge.ts","../src/edge.ts","../src/graph.ts"],"sourcesContent":["import { Text } from '@pixi/text';\nimport { BitmapText } from '@pixi/text-bitmap';\n\nconst WHITE = 0xffffff;\n\nexport enum TextType {\n  TEXT = 'TEXT',\n  BITMAP_TEXT = 'BITMAP_TEXT',\n  // TODO: SDF_TEXT\n  // see https://github.com/PixelsCommander/pixi-sdf-text/issues/12\n}\n\n// TODO: use TextStyle from @pixi/text directly?\nexport interface TextStyle {\n  fontFamily: string;\n  fontSize: number;\n}\n\nexport function textToPixi(type: TextType, content: string, style: TextStyle) {\n  let text;\n  if (type === TextType.TEXT) {\n    // TODO: convert to bitmap font with BitmapFont.from?\n    text = new Text(content, {\n      fontFamily: style.fontFamily,\n      fontSize: style.fontSize,\n      fill: WHITE,\n    });\n  } else if (type === TextType.BITMAP_TEXT) {\n    text = new BitmapText(content, {\n      fontName: style.fontFamily,\n      fontSize: style.fontSize,\n    });\n  } else {\n    throw new Error('Invalid state');\n  }\n  text.roundPixels = true;\n  return text;\n}\n","import deepmerge from 'deepmerge';\nimport { BaseNodeAttributes, BaseEdgeAttributes } from '../attributes';\nimport { TextType } from './text';\n\nexport interface GraphStyle {\n  node: {\n    size: number;\n    color: string;\n    border: {\n      width: number;\n      color: string;\n    };\n    icon: {\n      url?: string;\n      width?: number;\n      height?: number;\n    };\n    label: {\n      content: string;\n      type: TextType;\n      fontFamily: string;\n      fontSize: number;\n      color: string;\n      backgroundColor: string;\n      padding: number;\n    };\n  };\n  edge: {\n    width: number;\n    color: string;\n  };\n}\n\nexport type NodeStyle = GraphStyle['node'];\nexport type EdgeStyle = GraphStyle['edge'];\n\nexport type StyleDefinition<Style, Attributes> =\n  | ((attributes: Attributes) => Style)\n  | { [Key in keyof Style]?: StyleDefinition<Style[Key], Attributes> }\n  | Style;\n\nexport type NodeStyleDefinition<NodeAttributes extends BaseNodeAttributes = BaseNodeAttributes> = StyleDefinition<\n  NodeStyle,\n  NodeAttributes\n>;\nexport type EdgeStyleDefinition<EdgeAttributes extends BaseEdgeAttributes = BaseEdgeAttributes> = StyleDefinition<\n  EdgeStyle,\n  EdgeAttributes\n>;\n\nexport interface GraphStyleDefinition<\n  NodeAttributes extends BaseNodeAttributes = BaseNodeAttributes,\n  EdgeAttributes extends BaseEdgeAttributes = BaseEdgeAttributes\n> {\n  node?: NodeStyleDefinition<NodeAttributes>;\n  edge?: EdgeStyleDefinition<EdgeAttributes>;\n}\n\nexport function resolveStyleDefinition<Style, Attributes>(\n  styleDefinition: StyleDefinition<Style, Attributes>,\n  attributes: Attributes\n): Style {\n  let style: Style;\n  if (styleDefinition instanceof Function) {\n    style = styleDefinition(attributes);\n  } else if (typeof styleDefinition === 'object' && styleDefinition !== null) {\n    style = Object.fromEntries(\n      Object.entries(styleDefinition).map(([key, styleDefinition]) => {\n        return [key, resolveStyleDefinition(styleDefinition, attributes)];\n      })\n    ) as Style;\n  } else {\n    style = styleDefinition;\n  }\n  return style;\n}\n\nexport function resolveStyleDefinitions<Style, Attributes>(\n  styleDefinitions: (StyleDefinition<Style, Attributes> | undefined)[],\n  attributes: Attributes\n): Style {\n  const styles = styleDefinitions\n    .filter((x) => !!x)\n    .map((styleDefinition) => resolveStyleDefinition(styleDefinition!, attributes));\n  const style = deepmerge.all<Style>(styles);\n  return style;\n}\n","import { AbstractRenderer } from '@pixi/core';\nimport { Container } from '@pixi/display';\nimport { Texture } from '@pixi/core';\nimport { Rectangle } from '@pixi/math';\nimport { SCALE_MODES } from '@pixi/constants';\n\nexport class TextureCache {\n  renderer: AbstractRenderer;\n\n  private textures = new Map<string, Texture>();\n\n  constructor(renderer: AbstractRenderer) {\n    this.renderer = renderer;\n  }\n\n  get(key: string, defaultCallback: () => Container): Texture {\n    let texture = this.textures.get(key);\n    if (!texture) {\n      const container = defaultCallback();\n      const region = container.getLocalBounds(undefined, true);\n      const roundedRegion = new Rectangle(\n        Math.floor(region.x),\n        Math.floor(region.y),\n        Math.ceil(region.width),\n        Math.ceil(region.height)\n      );\n      texture = this.renderer.generateTexture(container, SCALE_MODES.LINEAR, this.renderer.resolution, roundedRegion);\n      this.textures.set(key, texture);\n    }\n    return texture;\n  }\n\n  delete(key: string) {\n    const texture = this.textures.get(key);\n    if (!texture) {\n      return;\n    }\n\n    texture.destroy();\n    this.textures.delete(key);\n  }\n\n  clear() {\n    Array.from(this.textures.keys()).forEach((key) => {\n      this.delete(key);\n    });\n  }\n\n  destroy() {\n    this.clear();\n  }\n}\n","import { rgb2hex } from '@pixi/utils';\nimport rgba from 'color-rgba';\n\nexport function colorToPixi(color: string) {\n  const rgbaColor = rgba(color);\n  if (!rgbaColor) {\n    throw new Error(`Invalid color ${color}`);\n  }\n  const pixiColor = rgb2hex([rgbaColor[0] / 255, rgbaColor[1] / 255, rgbaColor[2] / 255]);\n  const alpha = rgbaColor[3];\n  return [pixiColor, alpha] as [number, number];\n}\n","import { Texture } from '@pixi/core';\nimport { Container } from '@pixi/display';\nimport { Circle } from '@pixi/math';\nimport { Sprite } from '@pixi/sprite';\nimport { SmoothGraphics as Graphics } from '@pixi/graphics-smooth';\nimport '@pixi/mixin-get-child-by-name';\nimport { colorToPixi } from '../utils/color';\nimport { NodeStyle } from '../utils/style';\nimport { TextureCache } from '../texture-cache';\n\nconst DELIMETER = '::';\nconst WHITE = 0xffffff;\n\nconst NODE_CIRCLE = 'NODE_CIRCLE';\nconst NODE_CIRCLE_BORDER = 'NODE_CIRCLE_BORDER';\nconst NODE_ICON = 'NODE_ICON';\n\nexport function createNode(nodeGfx: Container) {\n  // nodeGfx\n  nodeGfx.hitArea = new Circle(0, 0);\n\n  // nodeGfx -> nodeCircle\n  const nodeCircle = new Sprite();\n  nodeCircle.name = NODE_CIRCLE;\n  nodeCircle.anchor.set(0.5);\n  nodeGfx.addChild(nodeCircle);\n\n  // nodeGfx -> nodeCircleBorder\n  const nodeCircleBorder = new Sprite();\n  nodeCircleBorder.name = NODE_CIRCLE_BORDER;\n  nodeCircleBorder.anchor.set(0.5);\n  nodeGfx.addChild(nodeCircleBorder);\n\n  // nodeGfx -> nodeIcon\n  const nodeIcon = new Sprite();\n  nodeIcon.name = NODE_ICON;\n  nodeIcon.anchor.set(0.5);\n  nodeGfx.addChild(nodeIcon);\n}\n\nexport function updateNodeStyle(nodeGfx: Container, nodeStyle: NodeStyle, textureCache: TextureCache) {\n  const nodeOuterSize = nodeStyle.size + nodeStyle.border.width;\n\n  const nodeCircleTextureKey = [NODE_CIRCLE, nodeStyle.size].join(DELIMETER);\n  const nodeCircleTexture = textureCache.get(nodeCircleTextureKey, () => {\n    const graphics = new Graphics();\n    graphics.beginFill(WHITE, 1.0, true);\n    graphics.drawCircle(nodeStyle.size, nodeStyle.size, nodeStyle.size);\n    return graphics;\n  });\n\n  const nodeCircleBorderTextureKey = [NODE_CIRCLE_BORDER, nodeStyle.size, nodeStyle.border.width].join(DELIMETER);\n  const nodeCircleBorderTexture = textureCache.get(nodeCircleBorderTextureKey, () => {\n    const graphics = new Graphics();\n    graphics.lineStyle(nodeStyle.border.width, WHITE);\n    graphics.drawCircle(nodeOuterSize, nodeOuterSize, nodeStyle.size);\n    return graphics;\n  });\n\n  // nodeGfx\n  (nodeGfx.hitArea as Circle).radius = nodeOuterSize;\n\n  // nodeGfx -> nodeCircle\n  const nodeCircle = nodeGfx.getChildByName!(NODE_CIRCLE) as unknown as Sprite;\n  nodeCircle.texture = nodeCircleTexture;\n  [nodeCircle.tint, nodeCircle.alpha] = colorToPixi(nodeStyle.color);\n\n  // nodeGfx -> nodeCircleBorder\n  const nodeCircleBorder = nodeGfx.getChildByName!(NODE_CIRCLE_BORDER) as unknown as Sprite;\n  nodeCircleBorder.texture = nodeCircleBorderTexture;\n  [nodeCircleBorder.tint, nodeCircleBorder.alpha] = colorToPixi(nodeStyle.border.color);\n\n  // nodeGfx -> nodeIcon\n  if (nodeStyle.icon.url && nodeStyle.icon.width && nodeStyle.icon.height) {\n    const nodeIcon = nodeGfx.getChildByName!(NODE_ICON) as unknown as Sprite;\n    nodeIcon.texture = Texture.from(nodeStyle.icon.url);\n    nodeIcon.width = nodeStyle.icon.width;\n    nodeIcon.height = nodeStyle.icon.height;\n    nodeGfx.addChild(nodeIcon);\n  }\n}\n\nexport function updateNodeVisibility(nodeGfx: Container, zoomStep: number) {\n  // nodeGfx -> nodeCircleBorder\n  const nodeCircleBorder = nodeGfx.getChildByName!(NODE_CIRCLE_BORDER) as unknown as Sprite;\n  nodeCircleBorder.visible = zoomStep >= 1;\n\n  // nodeGfx -> nodeIcon\n  const nodeIcon = nodeGfx.getChildByName!(NODE_ICON) as unknown as Sprite;\n  if (nodeIcon) {\n    nodeIcon.visible = zoomStep >= 2;\n  }\n}\n","import { Container } from '@pixi/display';\nimport { Sprite } from '@pixi/sprite';\nimport { Texture } from '@pixi/core';\nimport { BitmapText } from '@pixi/text-bitmap';\nimport '@pixi/mixin-get-child-by-name';\nimport { colorToPixi } from '../utils/color';\nimport { NodeStyle } from '../utils/style';\nimport { textToPixi } from '../utils/text';\nimport { TextureCache } from '../texture-cache';\n\nconst DELIMETER = '::';\n\nconst NODE_LABEL_BACKGROUND = 'NODE_LABEL_BACKGROUND';\nconst NODE_LABEL_TEXT = 'NODE_LABEL_TEXT';\n\nexport function createNodeLabel(nodeLabelGfx: Container) {\n  // nodeLabelGfx -> nodeLabelBackground\n  const nodeLabelBackground = new Sprite(Texture.WHITE);\n  nodeLabelBackground.name = NODE_LABEL_BACKGROUND;\n  nodeLabelBackground.anchor.set(0.5);\n  nodeLabelGfx.addChild(nodeLabelBackground);\n\n  // nodeLabelGfx -> nodeLabelText\n  const nodeLabelText = new Sprite();\n  nodeLabelText.name = NODE_LABEL_TEXT;\n  nodeLabelText.anchor.set(0.5);\n  nodeLabelGfx.addChild(nodeLabelText);\n}\n\nexport function updateNodeLabelStyle(nodeLabelGfx: Container, nodeStyle: NodeStyle, textureCache: TextureCache) {\n  const nodeOuterSize = nodeStyle.size + nodeStyle.border.width;\n\n  const nodeLabelTextTextureKey = [\n    NODE_LABEL_TEXT,\n    nodeStyle.label.fontFamily,\n    nodeStyle.label.fontSize,\n    nodeStyle.label.content,\n  ].join(DELIMETER);\n  const nodeLabelTextTexture = textureCache.get(nodeLabelTextTextureKey, () => {\n    const text = textToPixi(nodeStyle.label.type, nodeStyle.label.content, {\n      fontFamily: nodeStyle.label.fontFamily,\n      fontSize: nodeStyle.label.fontSize,\n    });\n    return text;\n  });\n\n  // nodeLabelGfx -> nodeLabelBackground\n  const nodeLabelBackground = nodeLabelGfx.getChildByName!(NODE_LABEL_BACKGROUND) as unknown as Sprite;\n  nodeLabelBackground.y = nodeOuterSize + (nodeLabelTextTexture.height + nodeStyle.label.padding * 2) / 2;\n  nodeLabelBackground.width = nodeLabelTextTexture.width + nodeStyle.label.padding * 2;\n  nodeLabelBackground.height = nodeLabelTextTexture.height + nodeStyle.label.padding * 2;\n  [nodeLabelBackground.tint, nodeLabelBackground.alpha] = colorToPixi(nodeStyle.label.backgroundColor);\n\n  // nodeLabelGfx -> nodeLabelText\n  const nodeLabelText = nodeLabelGfx.getChildByName!(NODE_LABEL_TEXT) as unknown as Sprite;\n  nodeLabelText.texture = nodeLabelTextTexture;\n  nodeLabelText.y = nodeOuterSize + (nodeLabelTextTexture.height + nodeStyle.label.padding * 2) / 2;\n  [nodeLabelText.tint, nodeLabelText.alpha] = colorToPixi(nodeStyle.label.color);\n}\n\nexport function updateNodeLabelVisibility(nodeLabelGfx: Container, zoomStep: number) {\n  // nodeLabelGfx -> nodeLabelBackground\n  const nodeLabelBackground = nodeLabelGfx.getChildByName!(NODE_LABEL_BACKGROUND) as unknown as Sprite;\n  nodeLabelBackground.visible = zoomStep >= 3;\n\n  // nodeLabelGfx -> nodeLabelText\n  const nodeLabelText = nodeLabelGfx.getChildByName!(NODE_LABEL_TEXT) as unknown as BitmapText;\n  nodeLabelText.visible = zoomStep >= 3;\n}\n","import { Container } from '@pixi/display';\nimport { InteractionEvent } from '@pixi/interaction';\nimport { IPointData } from '@pixi/math';\nimport { TypedEmitter } from 'tiny-typed-emitter';\nimport { createNode, updateNodeStyle, updateNodeVisibility } from './renderers/node';\nimport { createNodeLabel, updateNodeLabelStyle, updateNodeLabelVisibility } from './renderers/node-label';\nimport { NodeStyle } from './utils/style';\nimport { TextureCache } from './texture-cache';\n\ninterface PixiNodeEvents {\n  mousemove: (event: MouseEvent) => void;\n  mouseover: (event: MouseEvent) => void;\n  mouseout: (event: MouseEvent) => void;\n  mousedown: (event: MouseEvent) => void;\n  mouseup: (event: MouseEvent) => void;\n}\n\nexport class PixiNode extends TypedEmitter<PixiNodeEvents> {\n  nodeGfx: Container;\n  nodeLabelGfx: Container;\n  nodePlaceholderGfx: Container;\n  nodeLabelPlaceholderGfx: Container;\n\n  hovered: boolean = false;\n\n  constructor() {\n    super();\n\n    this.nodeGfx = this.createNode();\n    this.nodeLabelGfx = this.createNodeLabel();\n    this.nodePlaceholderGfx = new Container();\n    this.nodeLabelPlaceholderGfx = new Container();\n  }\n\n  private createNode() {\n    const nodeGfx = new Container();\n    nodeGfx.interactive = true;\n    nodeGfx.buttonMode = true;\n    nodeGfx.on('mousemove', (event: InteractionEvent) =>\n      this.emit('mousemove', event.data.originalEvent as MouseEvent)\n    );\n    nodeGfx.on('mouseover', (event: InteractionEvent) =>\n      this.emit('mouseover', event.data.originalEvent as MouseEvent)\n    );\n    nodeGfx.on('mouseout', (event: InteractionEvent) => this.emit('mouseout', event.data.originalEvent as MouseEvent));\n    nodeGfx.on('mousedown', (event: InteractionEvent) =>\n      this.emit('mousedown', event.data.originalEvent as MouseEvent)\n    );\n    nodeGfx.on('mouseup', (event: InteractionEvent) => this.emit('mouseup', event.data.originalEvent as MouseEvent));\n    createNode(nodeGfx);\n    return nodeGfx;\n  }\n\n  private createNodeLabel() {\n    const nodeLabelGfx = new Container();\n    nodeLabelGfx.interactive = true;\n    nodeLabelGfx.buttonMode = true;\n    nodeLabelGfx.on('mousemove', (event: InteractionEvent) =>\n      this.emit('mousemove', event.data.originalEvent as MouseEvent)\n    );\n    nodeLabelGfx.on('mouseover', (event: InteractionEvent) =>\n      this.emit('mouseover', event.data.originalEvent as MouseEvent)\n    );\n    nodeLabelGfx.on('mouseout', (event: InteractionEvent) =>\n      this.emit('mouseout', event.data.originalEvent as MouseEvent)\n    );\n    nodeLabelGfx.on('mousedown', (event: InteractionEvent) =>\n      this.emit('mousedown', event.data.originalEvent as MouseEvent)\n    );\n    nodeLabelGfx.on('mouseup', (event: InteractionEvent) =>\n      this.emit('mouseup', event.data.originalEvent as MouseEvent)\n    );\n    createNodeLabel(nodeLabelGfx);\n    return nodeLabelGfx;\n  }\n\n  updatePosition(position: IPointData) {\n    this.nodeGfx.position.copyFrom(position);\n    this.nodeLabelGfx.position.copyFrom(position);\n  }\n\n  updateStyle(nodeStyle: NodeStyle, textureCache: TextureCache) {\n    updateNodeStyle(this.nodeGfx, nodeStyle, textureCache);\n    updateNodeLabelStyle(this.nodeLabelGfx, nodeStyle, textureCache);\n  }\n\n  updateVisibility(zoomStep: number) {\n    updateNodeVisibility(this.nodeGfx, zoomStep);\n    updateNodeLabelVisibility(this.nodeLabelGfx, zoomStep);\n  }\n}\n","import { Container } from '@pixi/display';\nimport { Sprite } from '@pixi/sprite';\nimport { Texture } from '@pixi/core';\nimport '@pixi/mixin-get-child-by-name';\nimport { colorToPixi } from '../utils/color';\nimport { EdgeStyle } from '../utils/style';\nimport { TextureCache } from '../texture-cache';\n\nconst EDGE_LINE = 'EDGE_LINE';\n\nexport function createEdge(edgeGfx: Container) {\n  // edgeGfx -> edgeLine\n  const edgeLine = new Sprite(Texture.WHITE);\n  edgeLine.name = EDGE_LINE;\n  edgeLine.anchor.set(0.5);\n  edgeGfx.addChild(edgeLine);\n}\n\nexport function updateEdgeStyle(edgeGfx: Container, edgeStyle: EdgeStyle, _textureCache: TextureCache) {\n  // edgeGfx -> edgeLine\n  const edgeLine = edgeGfx.getChildByName!(EDGE_LINE) as unknown as Sprite;\n  edgeLine.width = edgeStyle.width;\n  [edgeLine.tint, edgeLine.alpha] = colorToPixi(edgeStyle.color);\n}\n\nexport function updateEdgeVisibility(edgeGfx: Container, zoomStep: number) {\n  // edgeGfx -> edgeLine\n  const edgeLine = edgeGfx.getChildByName!(EDGE_LINE) as unknown as Sprite;\n  edgeLine.visible = zoomStep >= 1;\n}\n","import { Container } from '@pixi/display';\nimport { InteractionEvent } from '@pixi/interaction';\nimport { IPointData } from '@pixi/math';\nimport { TypedEmitter } from 'tiny-typed-emitter';\nimport { createEdge, updateEdgeStyle, updateEdgeVisibility } from './renderers/edge';\nimport { EdgeStyle } from './utils/style';\nimport { TextureCache } from './texture-cache';\n\ninterface PixiEdgeEvents {\n  mousemove: (event: MouseEvent) => void;\n  mouseover: (event: MouseEvent) => void;\n  mouseout: (event: MouseEvent) => void;\n  mousedown: (event: MouseEvent) => void;\n  mouseup: (event: MouseEvent) => void;\n}\n\nexport class PixiEdge extends TypedEmitter<PixiEdgeEvents> {\n  edgeGfx: Container;\n  edgePlaceholderGfx: Container;\n\n  hovered: boolean = false;\n\n  constructor() {\n    super();\n\n    this.edgeGfx = this.createEdge();\n    this.edgePlaceholderGfx = new Container();\n  }\n\n  createEdge() {\n    const edgeGfx = new Container();\n    edgeGfx.interactive = true;\n    edgeGfx.buttonMode = true;\n    edgeGfx.on('mousemove', (event: InteractionEvent) =>\n      this.emit('mousemove', event.data.originalEvent as MouseEvent)\n    );\n    edgeGfx.on('mouseover', (event: InteractionEvent) =>\n      this.emit('mouseover', event.data.originalEvent as MouseEvent)\n    );\n    edgeGfx.on('mouseout', (event: InteractionEvent) => this.emit('mouseout', event.data.originalEvent as MouseEvent));\n    edgeGfx.on('mousedown', (event: InteractionEvent) =>\n      this.emit('mousedown', event.data.originalEvent as MouseEvent)\n    );\n    edgeGfx.on('mouseup', (event: InteractionEvent) => this.emit('mouseup', event.data.originalEvent as MouseEvent));\n    createEdge(edgeGfx);\n    return edgeGfx;\n  }\n\n  updatePosition(sourceNodePosition: IPointData, targetNodePosition: IPointData) {\n    const position = {\n      x: (sourceNodePosition.x + targetNodePosition.x) / 2,\n      y: (sourceNodePosition.y + targetNodePosition.y) / 2,\n    };\n    const rotation = -Math.atan2(\n      targetNodePosition.x - sourceNodePosition.x,\n      targetNodePosition.y - sourceNodePosition.y\n    );\n    const length = Math.hypot(targetNodePosition.x - sourceNodePosition.x, targetNodePosition.y - sourceNodePosition.y);\n    this.edgeGfx.position.copyFrom(position);\n    this.edgeGfx.rotation = rotation;\n    this.edgeGfx.height = length;\n  }\n\n  updateStyle(edgeStyle: EdgeStyle, textureCache: TextureCache) {\n    updateEdgeStyle(this.edgeGfx, edgeStyle, textureCache);\n  }\n\n  updateVisibility(zoomStep: number) {\n    updateEdgeVisibility(this.edgeGfx, zoomStep);\n  }\n}\n","import { Application } from '@pixi/app';\nimport { TickerPlugin } from '@pixi/ticker';\nimport { AppLoaderPlugin, Loader } from '@pixi/loaders';\nimport { BitmapFontLoader } from '@pixi/text-bitmap';\nimport { Renderer, BatchRenderer } from '@pixi/core';\nimport { InteractionManager } from '@pixi/interaction';\nimport { Container } from '@pixi/display';\nimport { Point, IPointData } from '@pixi/math';\nimport { IAddOptions } from '@pixi/loaders';\nimport { Viewport } from 'pixi-viewport';\n// import { Cull } from '@pixi-essentials/cull';\nimport { Simple } from 'pixi-cull';\nimport { AbstractGraph } from 'graphology-types';\nimport { TypedEmitter } from 'tiny-typed-emitter';\nimport { GraphStyleDefinition, resolveStyleDefinitions } from './utils/style';\nimport { TextType } from './utils/text';\nimport { BaseNodeAttributes, BaseEdgeAttributes } from './attributes';\nimport { TextureCache } from './texture-cache';\nimport { PixiNode } from './node';\nimport { PixiEdge } from './edge';\nimport { LINE_SCALE_MODE, settings } from '@pixi/graphics-smooth';\n\nApplication.registerPlugin(TickerPlugin);\nApplication.registerPlugin(AppLoaderPlugin);\nLoader.registerPlugin(BitmapFontLoader);\nRenderer.registerPlugin('batch', BatchRenderer);\nRenderer.registerPlugin('interaction', InteractionManager);\n\nconst DEFAULT_STYLE: GraphStyleDefinition = {\n  node: {\n    size: 15,\n    color: '#000000',\n    border: {\n      width: 2,\n      color: '#ffffff',\n    },\n    icon: {},\n    label: {\n      type: TextType.TEXT,\n      fontFamily: 'Arial',\n      fontSize: 12,\n      content: '',\n      color: '#333333',\n      backgroundColor: 'rgba(0, 0, 0, 0)',\n      padding: 4,\n    },\n  },\n  edge: {\n    width: 1,\n    color: '#cccccc',\n  },\n};\n\nconst WORLD_PADDING = 100;\n\nexport interface GraphOptions<\n  NodeAttributes extends BaseNodeAttributes = BaseNodeAttributes,\n  EdgeAttributes extends BaseEdgeAttributes = BaseEdgeAttributes\n> {\n  container: HTMLElement;\n  graph: AbstractGraph<NodeAttributes, EdgeAttributes>;\n  style: GraphStyleDefinition<NodeAttributes, EdgeAttributes>;\n  hoverStyle: GraphStyleDefinition<NodeAttributes, EdgeAttributes>;\n  resources?: IAddOptions[];\n}\n\ninterface PixiGraphEvents {\n  nodeClick: (event: MouseEvent, nodeKey: string) => void;\n  nodeMousemove: (event: MouseEvent, nodeKey: string) => void;\n  nodeMouseover: (event: MouseEvent, nodeKey: string) => void;\n  nodeMouseout: (event: MouseEvent, nodeKey: string) => void;\n  nodeMousedown: (event: MouseEvent, nodeKey: string) => void;\n  nodeMouseup: (event: MouseEvent, nodeKey: string) => void;\n  edgeClick: (event: MouseEvent, edgeKey: string) => void;\n  edgeMousemove: (event: MouseEvent, edgeKey: string) => void;\n  edgeMouseover: (event: MouseEvent, edgeKey: string) => void;\n  edgeMouseout: (event: MouseEvent, edgeKey: string) => void;\n  edgeMousedown: (event: MouseEvent, edgeKey: string) => void;\n  edgeMouseup: (event: MouseEvent, edgeKey: string) => void;\n}\n\nexport class PixiGraph<\n  NodeAttributes extends BaseNodeAttributes = BaseNodeAttributes,\n  EdgeAttributes extends BaseEdgeAttributes = BaseEdgeAttributes\n> extends TypedEmitter<PixiGraphEvents> {\n  container: HTMLElement;\n  graph: AbstractGraph<NodeAttributes, EdgeAttributes>;\n  style: GraphStyleDefinition<NodeAttributes, EdgeAttributes>;\n  hoverStyle: GraphStyleDefinition<NodeAttributes, EdgeAttributes>;\n  resources?: IAddOptions[];\n\n  private app: Application;\n  private textureCache: TextureCache;\n  private viewport: Viewport;\n  private cull: Simple;\n  private resizeObserver: ResizeObserver;\n  private edgeLayer: Container;\n  private frontEdgeLayer: Container;\n  private nodeLayer: Container;\n  private nodeLabelLayer: Container;\n  private frontNodeLayer: Container;\n  private frontNodeLabelLayer: Container;\n  private nodeKeyToNodeObject = new Map<string, PixiNode>();\n  private edgeKeyToEdgeObject = new Map<string, PixiEdge>();\n\n  private mousedownNodeKey: string | null = null;\n  private mousedownEdgeKey: string | null = null;\n\n  private onGraphNodeAddedBound = this.onGraphNodeAdded.bind(this);\n  private onGraphEdgeAddedBound = this.onGraphEdgeAdded.bind(this);\n  private onGraphNodeDroppedBound = this.onGraphNodeDropped.bind(this);\n  private onGraphEdgeDroppedBound = this.onGraphEdgeDropped.bind(this);\n  private onGraphClearedBound = this.onGraphCleared.bind(this);\n  private onGraphEdgesClearedBound = this.onGraphEdgesCleared.bind(this);\n  private onGraphNodeAttributesUpdatedBound = this.onGraphNodeAttributesUpdated.bind(this);\n  private onGraphEdgeAttributesUpdatedBound = this.onGraphEdgeAttributesUpdated.bind(this);\n  private onGraphEachNodeAttributesUpdatedBound = this.onGraphEachNodeAttributesUpdated.bind(this);\n  private onGraphEachEdgeAttributesUpdatedBound = this.onGraphEachEdgeAttributesUpdated.bind(this);\n  private onDocumentMouseMoveBound = this.onDocumentMouseMove.bind(this);\n  private onDocumentMouseUpBound = this.onDocumentMouseUp.bind(this);\n\n  constructor(options: GraphOptions<NodeAttributes, EdgeAttributes>) {\n    super();\n\n    this.container = options.container;\n    this.graph = options.graph;\n    this.style = options.style;\n    this.hoverStyle = options.hoverStyle;\n    this.resources = options.resources;\n\n    if (!(this.container instanceof HTMLElement)) {\n      throw new Error('container should be a HTMLElement');\n    }\n\n    settings.LINE_SCALE_MODE = LINE_SCALE_MODE.NORMAL;\n\n    // create PIXI application\n    this.app = new Application({\n      resizeTo: this.container,\n      resolution: window.devicePixelRatio,\n      transparent: true,\n      antialias: true,\n      autoDensity: true,\n    });\n    this.container.appendChild(this.app.view);\n    this.cull = new Simple({\n      dirtyTest: true,\n    });\n\n    this.app.renderer.plugins.interaction.moveWhenInside = true;\n    this.app.view.addEventListener('wheel', (event) => {\n      event.preventDefault();\n    });\n\n    this.textureCache = new TextureCache(this.app.renderer);\n\n    // create PIXI viewport\n    this.viewport = new Viewport({\n      screenWidth: this.container.clientWidth,\n      screenHeight: this.container.clientHeight,\n      interaction: this.app.renderer.plugins.interaction,\n    })\n      .drag()\n      .pinch()\n      .wheel()\n      .decelerate()\n      .clampZoom({ maxScale: 2 });\n    this.app.stage.addChild(this.viewport);\n\n    // create layers\n    this.edgeLayer = new Container();\n    this.frontEdgeLayer = new Container();\n    this.nodeLayer = new Container();\n    this.nodeLabelLayer = new Container();\n    this.frontNodeLayer = new Container();\n    this.frontNodeLabelLayer = new Container();\n    this.viewport.addChild(this.edgeLayer);\n    this.viewport.addChild(this.frontEdgeLayer);\n    this.viewport.addChild(this.nodeLayer);\n    this.viewport.addChild(this.nodeLabelLayer);\n    this.viewport.addChild(this.frontNodeLayer);\n    this.viewport.addChild(this.frontNodeLabelLayer);\n\n    this.resizeObserver = new ResizeObserver(() => {\n      this.app.resize();\n      this.viewport.resize(this.container.clientWidth, this.container.clientHeight);\n      this.updateGraphVisibility();\n    });\n\n    // preload resources\n    if (this.resources) {\n      this.app.loader.add(this.resources);\n    }\n    this.app.loader.load(() => {\n      this.viewport.on('frame-end', () => {\n        if (this.viewport.dirty) {\n          this.updateGraphVisibility();\n          this.viewport.dirty = false;\n        }\n      });\n\n      this.resizeObserver.observe(this.container);\n\n      // listen to graph changes\n      this.graph.on('nodeAdded', this.onGraphNodeAddedBound);\n      this.graph.on('edgeAdded', this.onGraphEdgeAddedBound);\n      this.graph.on('nodeDropped', this.onGraphNodeDroppedBound);\n      this.graph.on('edgeDropped', this.onGraphEdgeDroppedBound);\n      this.graph.on('cleared', this.onGraphClearedBound);\n      this.graph.on('edgesCleared', this.onGraphEdgesClearedBound);\n      this.graph.on('nodeAttributesUpdated', this.onGraphNodeAttributesUpdatedBound);\n      this.graph.on('edgeAttributesUpdated', this.onGraphEdgeAttributesUpdatedBound);\n      this.graph.on('eachNodeAttributesUpdated', this.onGraphEachNodeAttributesUpdatedBound);\n      this.graph.on('eachEdgeAttributesUpdated', this.onGraphEachEdgeAttributesUpdatedBound);\n\n      // initial draw\n      this.createGraph();\n      this.resetView();\n    });\n  }\n\n  destroy() {\n    this.graph.off('nodeAdded', this.onGraphNodeAddedBound);\n    this.graph.off('edgeAdded', this.onGraphEdgeAddedBound);\n    this.graph.off('nodeDropped', this.onGraphNodeDroppedBound);\n    this.graph.off('edgeDropped', this.onGraphEdgeDroppedBound);\n    this.graph.off('cleared', this.onGraphClearedBound);\n    this.graph.off('edgesCleared', this.onGraphEdgesClearedBound);\n    this.graph.off('nodeAttributesUpdated', this.onGraphNodeAttributesUpdatedBound);\n    this.graph.off('edgeAttributesUpdated', this.onGraphEdgeAttributesUpdatedBound);\n    this.graph.off('eachNodeAttributesUpdated', this.onGraphEachNodeAttributesUpdatedBound);\n    this.graph.off('eachEdgeAttributesUpdated', this.onGraphEachEdgeAttributesUpdatedBound);\n\n    this.resizeObserver.disconnect();\n    this.resizeObserver = undefined!;\n\n    this.textureCache.destroy();\n    this.textureCache = undefined!;\n\n    this.app.destroy(true, { children: true, texture: true, baseTexture: true });\n    this.app = undefined!;\n  }\n\n  private get zoomStep() {\n    return Math.min(this.viewport.worldWidth, this.viewport.worldHeight) / 10;\n  }\n\n  zoomIn() {\n    this.viewport.zoom(-this.zoomStep, true);\n  }\n\n  zoomOut() {\n    this.viewport.zoom(this.zoomStep, true);\n  }\n\n  resetView() {\n    const nodesX = this.graph.nodes().map((nodeKey) => this.graph.getNodeAttribute(nodeKey, 'x'));\n    const nodesY = this.graph.nodes().map((nodeKey) => this.graph.getNodeAttribute(nodeKey, 'y'));\n    const minX = Math.min(...nodesX);\n    const maxX = Math.max(...nodesX);\n    const minY = Math.min(...nodesY);\n    const maxY = Math.max(...nodesY);\n\n    const graphWidth = Math.abs(maxX - minX);\n    const graphHeight = Math.abs(maxY - minY);\n    const graphCenter = new Point(minX + graphWidth / 2, minY + graphHeight / 2);\n\n    const worldWidth = graphWidth + WORLD_PADDING * 2;\n    const worldHeight = graphHeight + WORLD_PADDING * 2;\n\n    // TODO: update worldWidth/worldHeight when graph is updated?\n    this.viewport.resize(this.container.clientWidth, this.container.clientHeight, worldWidth, worldHeight);\n\n    this.viewport.setZoom(1); // otherwise scale is 0 when initialized in React useEffect\n    this.viewport.center = graphCenter;\n    this.viewport.fit(true);\n  }\n\n  private onGraphNodeAdded(data: { key: string; attributes: NodeAttributes }) {\n    const nodeKey = data.key;\n    const nodeAttributes = data.attributes;\n    this.createNode(nodeKey, nodeAttributes);\n  }\n\n  private onGraphEdgeAdded(data: { key: string; attributes: EdgeAttributes; source: string; target: string }) {\n    const edgeKey = data.key;\n    const edgeAttributes = data.attributes;\n    const sourceNodeKey = data.source;\n    const targetNodeKey = data.target;\n    const sourceNodeAttributes = this.graph.getNodeAttributes(sourceNodeKey);\n    const targetNodeAttributes = this.graph.getNodeAttributes(targetNodeKey);\n    this.createEdge(edgeKey, edgeAttributes, sourceNodeKey, targetNodeKey, sourceNodeAttributes, targetNodeAttributes);\n  }\n\n  private onGraphNodeDropped(data: { key: string }) {\n    const nodeKey = data.key;\n    this.dropNode(nodeKey);\n  }\n\n  private onGraphEdgeDropped(data: { key: string }) {\n    const edgeKey = data.key;\n    this.dropEdge(edgeKey);\n  }\n\n  private onGraphCleared() {\n    Array.from(this.edgeKeyToEdgeObject.keys()).forEach(this.dropEdge.bind(this));\n    Array.from(this.nodeKeyToNodeObject.keys()).forEach(this.dropNode.bind(this));\n  }\n\n  private onGraphEdgesCleared() {\n    Array.from(this.edgeKeyToEdgeObject.keys()).forEach(this.dropEdge.bind(this));\n  }\n\n  private onGraphNodeAttributesUpdated(data: { key: string }) {\n    const nodeKey = data.key;\n    this.updateNodeStyleByKey(nodeKey);\n    // TODO: normalize position?\n  }\n\n  private onGraphEdgeAttributesUpdated(data: { key: string }) {\n    const edgeKey = data.key;\n    this.updateEdgeStyleByKey(edgeKey);\n  }\n\n  private onGraphEachNodeAttributesUpdated() {\n    this.graph.forEachNode(this.updateNodeStyle.bind(this));\n  }\n\n  private onGraphEachEdgeAttributesUpdated() {\n    this.graph.forEachEdge(this.updateEdgeStyle.bind(this));\n  }\n\n  private hoverNode(nodeKey: string) {\n    const node = this.nodeKeyToNodeObject.get(nodeKey)!;\n    if (node.hovered) {\n      return;\n    }\n\n    // update style\n    node.hovered = true;\n    this.updateNodeStyleByKey(nodeKey);\n\n    // move to front\n    const nodeIndex = this.nodeLayer.getChildIndex(node.nodeGfx);\n    this.nodeLayer.removeChildAt(nodeIndex);\n    this.nodeLabelLayer.removeChildAt(nodeIndex);\n    this.frontNodeLayer.removeChildAt(nodeIndex);\n    this.frontNodeLabelLayer.removeChildAt(nodeIndex);\n    this.nodeLayer.addChild(node.nodePlaceholderGfx);\n    this.nodeLabelLayer.addChild(node.nodeLabelPlaceholderGfx);\n    this.frontNodeLayer.addChild(node.nodeGfx);\n    this.frontNodeLabelLayer.addChild(node.nodeLabelGfx);\n  }\n\n  private unhoverNode(nodeKey: string) {\n    const node = this.nodeKeyToNodeObject.get(nodeKey)!;\n    if (!node.hovered) {\n      return;\n    }\n\n    // update style\n    node.hovered = false;\n    this.updateNodeStyleByKey(nodeKey);\n\n    // move to front\n    const nodeIndex = this.frontNodeLayer.getChildIndex(node.nodeGfx);\n    this.nodeLayer.removeChildAt(nodeIndex);\n    this.nodeLabelLayer.removeChildAt(nodeIndex);\n    this.frontNodeLayer.removeChildAt(nodeIndex);\n    this.frontNodeLabelLayer.removeChildAt(nodeIndex);\n    this.nodeLayer.addChild(node.nodeGfx);\n    this.nodeLabelLayer.addChild(node.nodeLabelGfx);\n    this.frontNodeLayer.addChild(node.nodePlaceholderGfx);\n    this.frontNodeLabelLayer.addChild(node.nodeLabelPlaceholderGfx);\n  }\n\n  private hoverEdge(edgeKey: string) {\n    const edge = this.edgeKeyToEdgeObject.get(edgeKey)!;\n    if (edge.hovered) {\n      return;\n    }\n\n    // update style\n    edge.hovered = true;\n    this.updateEdgeStyleByKey(edgeKey);\n\n    // move to front\n    const edgeIndex = this.edgeLayer.getChildIndex(edge.edgeGfx);\n    this.edgeLayer.removeChildAt(edgeIndex);\n    this.frontEdgeLayer.removeChildAt(edgeIndex);\n    this.edgeLayer.addChild(edge.edgePlaceholderGfx);\n    this.frontEdgeLayer.addChild(edge.edgeGfx);\n  }\n\n  private unhoverEdge(edgeKey: string) {\n    const edge = this.edgeKeyToEdgeObject.get(edgeKey)!;\n    if (!edge.hovered) {\n      return;\n    }\n\n    // update style\n    edge.hovered = false;\n    this.updateEdgeStyleByKey(edgeKey);\n\n    // move back\n    const edgeIndex = this.frontEdgeLayer.getChildIndex(edge.edgeGfx);\n    this.edgeLayer.removeChildAt(edgeIndex);\n    this.frontEdgeLayer.removeChildAt(edgeIndex);\n    this.edgeLayer.addChild(edge.edgeGfx);\n    this.frontEdgeLayer.addChild(edge.edgePlaceholderGfx);\n  }\n\n  private moveNode(nodeKey: string, point: IPointData) {\n    this.graph.setNodeAttribute(nodeKey, 'x', point.x);\n    this.graph.setNodeAttribute(nodeKey, 'y', point.y);\n\n    // update style\n    this.updateNodeStyleByKey(nodeKey);\n    this.graph.edges(nodeKey).forEach(this.updateEdgeStyleByKey.bind(this));\n  }\n\n  private enableNodeDragging() {\n    this.viewport.pause = true; // disable viewport dragging\n\n    document.addEventListener('mousemove', this.onDocumentMouseMoveBound);\n    document.addEventListener('mouseup', this.onDocumentMouseUpBound, { once: true });\n  }\n\n  private onDocumentMouseMove(event: MouseEvent) {\n    const eventPosition = new Point(event.offsetX, event.offsetY);\n    const worldPosition = this.viewport.toWorld(eventPosition);\n\n    if (this.mousedownNodeKey) {\n      this.moveNode(this.mousedownNodeKey, worldPosition);\n    }\n  }\n\n  private onDocumentMouseUp() {\n    this.viewport.pause = false; // enable viewport dragging\n\n    document.removeEventListener('mousemove', this.onDocumentMouseMoveBound);\n\n    this.mousedownNodeKey = null;\n    this.mousedownEdgeKey = null;\n  }\n\n  private createGraph() {\n    this.graph.forEachNode(this.createNode.bind(this));\n    this.graph.forEachEdge(this.createEdge.bind(this));\n\n    // todo\n    // when graph change(position change or add/delete new node)\n    // should mark related object dirty.\n    // @ts-ignore\n    (this.viewport.children as Container[]).map((layer) => this.cull.addList(layer.children));\n  }\n\n  private createNode(nodeKey: string, nodeAttributes: NodeAttributes) {\n    const node = new PixiNode();\n    node.on('mousemove', (event: MouseEvent) => {\n      this.emit('nodeMousemove', event, nodeKey);\n    });\n    node.on('mouseover', (event: MouseEvent) => {\n      if (!this.mousedownNodeKey) {\n        this.hoverNode(nodeKey);\n      }\n      this.emit('nodeMouseover', event, nodeKey);\n    });\n    node.on('mouseout', (event: MouseEvent) => {\n      if (!this.mousedownNodeKey) {\n        this.unhoverNode(nodeKey);\n      }\n      this.emit('nodeMouseout', event, nodeKey);\n    });\n    node.on('mousedown', (event: MouseEvent) => {\n      this.mousedownNodeKey = nodeKey;\n      this.enableNodeDragging();\n      this.emit('nodeMousedown', event, nodeKey);\n    });\n    node.on('mouseup', (event: MouseEvent) => {\n      this.emit('nodeMouseup', event, nodeKey);\n      // why native click event doesn't work?\n      if (this.mousedownNodeKey === nodeKey) {\n        this.emit('nodeClick', event, nodeKey);\n      }\n    });\n    this.nodeLayer.addChild(node.nodeGfx);\n    this.nodeLabelLayer.addChild(node.nodeLabelGfx);\n    this.frontNodeLayer.addChild(node.nodePlaceholderGfx);\n    this.frontNodeLabelLayer.addChild(node.nodeLabelPlaceholderGfx);\n    this.nodeKeyToNodeObject.set(nodeKey, node);\n\n    this.updateNodeStyle(nodeKey, nodeAttributes);\n  }\n\n  private createEdge(\n    edgeKey: string,\n    edgeAttributes: EdgeAttributes,\n    sourceNodeKey: string,\n    targetNodeKey: string,\n    sourceNodeAttributes: NodeAttributes,\n    targetNodeAttributes: NodeAttributes\n  ) {\n    const edge = new PixiEdge();\n    edge.on('mousemove', (event: MouseEvent) => {\n      this.emit('edgeMousemove', event, edgeKey);\n    });\n    edge.on('mouseover', (event: MouseEvent) => {\n      this.hoverEdge(edgeKey);\n      this.emit('edgeMouseover', event, edgeKey);\n    });\n    edge.on('mouseout', (event: MouseEvent) => {\n      this.unhoverEdge(edgeKey);\n      this.emit('edgeMouseout', event, edgeKey);\n    });\n    edge.on('mousedown', (event: MouseEvent) => {\n      this.mousedownEdgeKey = edgeKey;\n      this.emit('edgeMousedown', event, edgeKey);\n    });\n    edge.on('mouseup', (event: MouseEvent) => {\n      this.emit('edgeMouseup', event, edgeKey);\n      // why native click event doesn't work?\n      if (this.mousedownEdgeKey === edgeKey) {\n        this.emit('edgeClick', event, edgeKey);\n      }\n    });\n    this.edgeLayer.addChild(edge.edgeGfx);\n    this.frontEdgeLayer.addChild(edge.edgePlaceholderGfx);\n    this.edgeKeyToEdgeObject.set(edgeKey, edge);\n\n    this.updateEdgeStyle(\n      edgeKey,\n      edgeAttributes,\n      sourceNodeKey,\n      targetNodeKey,\n      sourceNodeAttributes,\n      targetNodeAttributes\n    );\n  }\n\n  private dropNode(nodeKey: string) {\n    const node = this.nodeKeyToNodeObject.get(nodeKey)!;\n\n    this.nodeLayer.removeChild(node.nodeGfx);\n    this.nodeLabelLayer.removeChild(node.nodeLabelGfx);\n    this.frontNodeLayer.removeChild(node.nodePlaceholderGfx);\n    this.frontNodeLabelLayer.removeChild(node.nodeLabelPlaceholderGfx);\n    this.nodeKeyToNodeObject.delete(nodeKey);\n  }\n\n  private dropEdge(edgeKey: string) {\n    const edge = this.edgeKeyToEdgeObject.get(edgeKey)!;\n\n    this.edgeLayer.removeChild(edge.edgeGfx);\n    this.frontEdgeLayer.removeChild(edge.edgePlaceholderGfx);\n    this.edgeKeyToEdgeObject.delete(edgeKey);\n  }\n\n  private updateNodeStyleByKey(nodeKey: string) {\n    const nodeAttributes = this.graph.getNodeAttributes(nodeKey);\n    this.updateNodeStyle(nodeKey, nodeAttributes);\n  }\n\n  private updateNodeStyle(nodeKey: string, nodeAttributes: NodeAttributes) {\n    const node = this.nodeKeyToNodeObject.get(nodeKey)!;\n\n    const nodePosition = { x: nodeAttributes.x, y: nodeAttributes.y };\n    node.updatePosition(nodePosition);\n\n    const nodeStyleDefinitions = [DEFAULT_STYLE.node, this.style.node, node.hovered ? this.hoverStyle.node : undefined];\n    const nodeStyle = resolveStyleDefinitions(nodeStyleDefinitions, nodeAttributes);\n    node.updateStyle(nodeStyle, this.textureCache);\n  }\n\n  private updateEdgeStyleByKey(edgeKey: string) {\n    const edgeAttributes = this.graph.getEdgeAttributes(edgeKey);\n    const sourceNodeKey = this.graph.source(edgeKey);\n    const targetNodeKey = this.graph.target(edgeKey);\n    const sourceNodeAttributes = this.graph.getNodeAttributes(sourceNodeKey);\n    const targetNodeAttributes = this.graph.getNodeAttributes(targetNodeKey);\n    this.updateEdgeStyle(\n      edgeKey,\n      edgeAttributes,\n      sourceNodeKey,\n      targetNodeKey,\n      sourceNodeAttributes,\n      targetNodeAttributes\n    );\n  }\n\n  private updateEdgeStyle(\n    edgeKey: string,\n    edgeAttributes: EdgeAttributes,\n    _sourceNodeKey: string,\n    _targetNodeKey: string,\n    sourceNodeAttributes: NodeAttributes,\n    targetNodeAttributes: NodeAttributes\n  ) {\n    const edge = this.edgeKeyToEdgeObject.get(edgeKey)!;\n    // const sourceNode = this.nodeKeyToNodeObject.get(sourceNodeKey)!;\n    // const targetNode = this.nodeKeyToNodeObject.get(targetNodeKey)!;\n\n    const sourceNodePosition = { x: sourceNodeAttributes.x, y: sourceNodeAttributes.y };\n    const targetNodePosition = { x: targetNodeAttributes.x, y: targetNodeAttributes.y };\n    edge.updatePosition(sourceNodePosition, targetNodePosition);\n\n    const edgeStyleDefinitions = [DEFAULT_STYLE.edge, this.style.edge, edge.hovered ? this.hoverStyle.edge : undefined];\n    const edgeStyle = resolveStyleDefinitions(edgeStyleDefinitions, edgeAttributes);\n    edge.updateStyle(edgeStyle, this.textureCache);\n  }\n\n  private updateGraphVisibility() {\n    // culling\n    this.cull.cull(this.viewport.getVisibleBounds(), false);\n\n    // original culling have performance issue.\n    // const cull = new Cull();\n    // cull.addAll((this.viewport.children as Container[]).map((layer) => layer.children).flat());\n    // cull.cull(this.app.renderer.screen);\n\n    // console.log(\n    //   Array.from((cull as any)._targetList as Set<DisplayObject>).filter(x => x.visible === true).length,\n    //   Array.from((cull as any)._targetList as Set<DisplayObject>).filter(x => x.visible === false).length\n    // );\n\n    // levels of detail\n    const zoom = this.viewport.scale.x;\n    const zoomSteps = [0.1, 0.2, 0.4, Infinity];\n    const zoomStep = zoomSteps.findIndex((zoomStep) => zoom <= zoomStep);\n\n    this.graph.forEachNode((nodeKey) => {\n      const node = this.nodeKeyToNodeObject.get(nodeKey)!;\n      node.updateVisibility(zoomStep);\n    });\n\n    this.graph.forEachEdge((edgeKey) => {\n      const edge = this.edgeKeyToEdgeObject.get(edgeKey)!;\n      edge.updateVisibility(zoomStep);\n    });\n  }\n}\n"],"names":["WHITE","TextType","text","Text","BitmapText","deepmerge","Rectangle","SCALE_MODES","rgba","rgb2hex","DELIMETER","Circle","Sprite","Graphics","Texture","Container","TypedEmitter","Application","TickerPlugin","AppLoaderPlugin","Loader","BitmapFontLoader","Renderer","BatchRenderer","InteractionManager","settings","LINE_SCALE_MODE","Simple","Viewport","Point"],"mappings":"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"}